<?php

namespace Proxies\__CG__\Oro\Bundle\PaymentBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PaymentTransaction extends \Oro\Bundle\PaymentBundle\Entity\PaymentTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'entityClass', 'entityIdentifier', 'accessIdentifier', 'accessToken', 'paymentMethod', 'action', 'reference', 'amount', 'currency', 'active', 'successful', 'sourcePaymentTransaction', 'relatedPaymentTransactions', 'request', 'response', 'transactionOptions', 'frontendOwner', 'createdAt', 'updatedAt', 'updatedAtSet', 'owner', 'organization'];
        }

        return ['__isInitialized__', 'id', 'entityClass', 'entityIdentifier', 'accessIdentifier', 'accessToken', 'paymentMethod', 'action', 'reference', 'amount', 'currency', 'active', 'successful', 'sourcePaymentTransaction', 'relatedPaymentTransactions', 'request', 'response', 'transactionOptions', 'frontendOwner', 'createdAt', 'updatedAt', 'updatedAtSet', 'owner', 'organization'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PaymentTransaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getAction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAction', []);

        return parent::getAction();
    }

    /**
     * {@inheritDoc}
     */
    public function setAction($action)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAction', [$action]);

        return parent::setAction($action);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityClass', []);

        return parent::getEntityClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityClass($entityClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityClass', [$entityClass]);

        return parent::setEntityClass($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityIdentifier', []);

        return parent::getEntityIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityIdentifier($entityIdentifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityIdentifier', [$entityIdentifier]);

        return parent::setEntityIdentifier($entityIdentifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequest', []);

        return parent::getRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequest(array $request = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequest', [$request]);

        return parent::setRequest($request);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponse', []);

        return parent::getResponse();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponse(array $response = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponse', [$response]);

        return parent::setResponse($response);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMethod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMethod', []);

        return parent::getPaymentMethod();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentMethod($paymentMethod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentMethod', [$paymentMethod]);

        return parent::setPaymentMethod($paymentMethod);
    }

    /**
     * {@inheritDoc}
     */
    public function setSourcePaymentTransaction(\Oro\Bundle\PaymentBundle\Entity\PaymentTransaction $sourcePaymentTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourcePaymentTransaction', [$sourcePaymentTransaction]);

        return parent::setSourcePaymentTransaction($sourcePaymentTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourcePaymentTransaction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourcePaymentTransaction', []);

        return parent::getSourcePaymentTransaction();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amount]);

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function addRelatedPaymentTransaction(\Oro\Bundle\PaymentBundle\Entity\PaymentTransaction $relatedPaymentTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRelatedPaymentTransaction', [$relatedPaymentTransaction]);

        return parent::addRelatedPaymentTransaction($relatedPaymentTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRelatedPaymentTransaction(\Oro\Bundle\PaymentBundle\Entity\PaymentTransaction $relatedPaymentTransaction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRelatedPaymentTransaction', [$relatedPaymentTransaction]);

        return parent::removeRelatedPaymentTransaction($relatedPaymentTransaction);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelatedPaymentTransactions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelatedPaymentTransactions', []);

        return parent::getRelatedPaymentTransactions();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function setSuccessful($successful)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuccessful', [$successful]);

        return parent::setSuccessful($successful);
    }

    /**
     * {@inheritDoc}
     */
    public function isSuccessful()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSuccessful', []);

        return parent::isSuccessful();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransactionOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransactionOptions', []);

        return parent::getTransactionOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransactionOptions(array $transactionOptions = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransactionOptions', [$transactionOptions]);

        return parent::setTransactionOptions($transactionOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessIdentifier($accessIdentifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessIdentifier', [$accessIdentifier]);

        return parent::setAccessIdentifier($accessIdentifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessIdentifier', []);

        return parent::getAccessIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessToken($accessToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessToken', [$accessToken]);

        return parent::setAccessToken($accessToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessToken', []);

        return parent::getAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getFrontendOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrontendOwner', []);

        return parent::getFrontendOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrontendOwner(\Oro\Bundle\CustomerBundle\Entity\CustomerUser $frontendOwner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrontendOwner', [$frontendOwner]);

        return parent::setFrontendOwner($frontendOwner);
    }

    /**
     * {@inheritDoc}
     */
    public function isClone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isClone', []);

        return parent::isClone();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\UserBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

}
