<?php

namespace Proxies\__CG__\Oro\Bundle\PricingBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PriceRule extends \Oro\Bundle\PricingBundle\Entity\PriceRule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'currency', 'currencyExpression', 'quantity', 'quantityExpression', 'productUnit', 'productUnitExpression', 'ruleCondition', 'rule', 'lexemes', 'priceList', 'priority'];
        }

        return ['__isInitialized__', 'id', 'currency', 'currencyExpression', 'quantity', 'quantityExpression', 'productUnit', 'productUnitExpression', 'ruleCondition', 'rule', 'lexemes', 'priceList', 'priority'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PriceRule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$currency]);

        return parent::setCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductUnit', []);

        return parent::getProductUnit();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductUnit(\Oro\Bundle\ProductBundle\Entity\ProductUnit $productUnit = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductUnit', [$productUnit]);

        return parent::setProductUnit($productUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getRuleCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRuleCondition', []);

        return parent::getRuleCondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setRuleCondition($ruleCondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRuleCondition', [$ruleCondition]);

        return parent::setRuleCondition($ruleCondition);
    }

    /**
     * {@inheritDoc}
     */
    public function getRule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRule', []);

        return parent::getRule();
    }

    /**
     * {@inheritDoc}
     */
    public function setRule($rule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRule', [$rule]);

        return parent::setRule($rule);
    }

    /**
     * {@inheritDoc}
     */
    public function setPriceList(\Oro\Bundle\PricingBundle\Entity\PriceList $priceList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriceList', [$priceList]);

        return parent::setPriceList($priceList);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriceList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriceList', []);

        return parent::getPriceList();
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function getLexemes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLexemes', []);

        return parent::getLexemes();
    }

    /**
     * {@inheritDoc}
     */
    public function setLexemes($lexemes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLexemes', [$lexemes]);

        return parent::setLexemes($lexemes);
    }

    /**
     * {@inheritDoc}
     */
    public function addLexeme(\Oro\Bundle\PricingBundle\Entity\PriceRuleLexeme $lexeme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLexeme', [$lexeme]);

        return parent::addLexeme($lexeme);
    }

    /**
     * {@inheritDoc}
     */
    public function removePriceRule(\Oro\Bundle\PricingBundle\Entity\PriceRuleLexeme $lexeme)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePriceRule', [$lexeme]);

        return parent::removePriceRule($lexeme);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencyExpression()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencyExpression', []);

        return parent::getCurrencyExpression();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencyExpression($currencyExpression)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencyExpression', [$currencyExpression]);

        return parent::setCurrencyExpression($currencyExpression);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantityExpression()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantityExpression', []);

        return parent::getQuantityExpression();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantityExpression($quantityExpression)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantityExpression', [$quantityExpression]);

        return parent::setQuantityExpression($quantityExpression);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductUnitExpression()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductUnitExpression', []);

        return parent::getProductUnitExpression();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductUnitExpression($productUnitExpression)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductUnitExpression', [$productUnitExpression]);

        return parent::setProductUnitExpression($productUnitExpression);
    }

}
