<?php

namespace Proxies\__CG__\Oro\Bundle\NotificationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmailNotification extends \Oro\Bundle\NotificationBundle\Entity\EmailNotification implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'entityName', 'event', 'template', 'recipientList', 'workflow_transition_name', 'workflow_definition', 'serialized_data'];
        }

        return ['__isInitialized__', 'id', 'entityName', 'event', 'template', 'recipientList', 'workflow_transition_name', 'workflow_definition', 'serialized_data'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmailNotification $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityName($entityName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityName', [$entityName]);

        return parent::setEntityName($entityName);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function hasEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasEntityName', []);

        return parent::hasEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function setEvent(\Oro\Bundle\NotificationBundle\Entity\Event $event = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEvent', [$event]);

        return parent::setEvent($event);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvent', []);

        return parent::getEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate(\Oro\Bundle\EmailBundle\Entity\EmailTemplate $template = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecipientList(\Oro\Bundle\NotificationBundle\Entity\RecipientList $recipientList = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecipientList', [$recipientList]);

        return parent::setRecipientList($recipientList);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipientList', []);

        return parent::getRecipientList();
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientGroupsList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipientGroupsList', []);

        return parent::getRecipientGroupsList();
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientUsersList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipientUsersList', []);

        return parent::getRecipientUsersList();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkflowTransitionName($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkflowTransitionName', [$value]);

        return parent::setWorkflowTransitionName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkflowDefinition($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkflowDefinition', [$value]);

        return parent::setWorkflowDefinition($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkflowTransitionName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkflowTransitionName', []);

        return parent::getWorkflowTransitionName();
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkflowDefinition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkflowDefinition', []);

        return parent::getWorkflowDefinition();
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

}
