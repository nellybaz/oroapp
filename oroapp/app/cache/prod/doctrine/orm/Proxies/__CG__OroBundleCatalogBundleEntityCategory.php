<?php

namespace Proxies\__CG__\Oro\Bundle\CatalogBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Category extends \Oro\Bundle\CatalogBundle\Entity\Category implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'titles', 'parentCategory', 'childCategories', 'shortDescriptions', 'longDescriptions', 'defaultProductOptions', 'materializedPath', 'denormalizedDefaultTitle', 'smallImage', 'serialized_data', 'products', 'minimumQuantityToOrder', 'metaTitles', 'metaKeywords', 'metaDescriptions', 'maximumQuantityToOrder', 'manageInventory', 'lowInventoryThreshold', 'largeImage', 'isUpcoming', 'inventoryThreshold', 'highlightLowInventory', 'decrementQuantity', 'backOrder', 'availability_date', 'createdAt', 'updatedAt', 'updatedAtSet', 'left', 'level', 'right', 'root', 'slugPrototypesWithRedirect', 'slugPrototypes', 'slugs'];
        }

        return ['__isInitialized__', 'id', 'titles', 'parentCategory', 'childCategories', 'shortDescriptions', 'longDescriptions', 'defaultProductOptions', 'materializedPath', 'denormalizedDefaultTitle', 'smallImage', 'serialized_data', 'products', 'minimumQuantityToOrder', 'metaTitles', 'metaKeywords', 'metaDescriptions', 'maximumQuantityToOrder', 'manageInventory', 'lowInventoryThreshold', 'largeImage', 'isUpcoming', 'inventoryThreshold', 'highlightLowInventory', 'decrementQuantity', 'backOrder', 'availability_date', 'createdAt', 'updatedAt', 'updatedAtSet', 'left', 'level', 'right', 'root', 'slugPrototypesWithRedirect', 'slugPrototypes', 'slugs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Category $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitles', []);

        return parent::getTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function addTitle(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTitle', [$title]);

        return parent::addTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTitle(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTitle', [$title]);

        return parent::removeTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentCategory', []);

        return parent::getParentCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentCategory(\Oro\Bundle\CatalogBundle\Entity\Category $parentCategory = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentCategory', [$parentCategory]);

        return parent::setParentCategory($parentCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildCategories', []);

        return parent::getChildCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addChildCategory(\Oro\Bundle\CatalogBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChildCategory', [$category]);

        return parent::addChildCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChildCategory(\Oro\Bundle\CatalogBundle\Entity\Category $category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChildCategory', [$category]);

        return parent::removeChildCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescriptions', []);

        return parent::getShortDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addShortDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addShortDescription', [$shortDescription]);

        return parent::addShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function removeShortDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeShortDescription', [$shortDescription]);

        return parent::removeShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongDescriptions', []);

        return parent::getLongDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addLongDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $longDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLongDescription', [$longDescription]);

        return parent::addLongDescription($longDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLongDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $longDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLongDescription', [$longDescription]);

        return parent::removeLongDescription($longDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultProductOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultProductOptions', []);

        return parent::getDefaultProductOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultProductOptions(\Oro\Bundle\CatalogBundle\Entity\CategoryDefaultProductOptions $defaultProductOptions = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultProductOptions', [$defaultProductOptions]);

        return parent::setDefaultProductOptions($defaultProductOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaterializedPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaterializedPath', []);

        return parent::getMaterializedPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaterializedPath($materializedPath)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaterializedPath', [$materializedPath]);

        return parent::setMaterializedPath($materializedPath);
    }

    /**
     * {@inheritDoc}
     */
    public function getDenormalizedDefaultTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDenormalizedDefaultTitle', []);

        return parent::getDenormalizedDefaultTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSmallImage($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSmallImage', [$value]);

        return parent::setSmallImage($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setProducts($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProducts', [$value]);

        return parent::setProducts($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMinimumQuantityToOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinimumQuantityToOrder', [$value]);

        return parent::setMinimumQuantityToOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitles', [$value]);

        return parent::setMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', [$value]);

        return parent::setMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescriptions', [$value]);

        return parent::setMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaximumQuantityToOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaximumQuantityToOrder', [$value]);

        return parent::setMaximumQuantityToOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setManageInventory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManageInventory', [$value]);

        return parent::setManageInventory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setLowInventoryThreshold($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLowInventoryThreshold', [$value]);

        return parent::setLowInventoryThreshold($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setLargeImage($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLargeImage', [$value]);

        return parent::setLargeImage($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsUpcoming($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsUpcoming', [$value]);

        return parent::setIsUpcoming($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setInventoryThreshold($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInventoryThreshold', [$value]);

        return parent::setInventoryThreshold($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setHighlightLowInventory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHighlightLowInventory', [$value]);

        return parent::setHighlightLowInventory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultTitle($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultTitle', [$value]);

        return parent::setDefaultTitle($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSlugPrototype($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSlugPrototype', [$value]);

        return parent::setDefaultSlugPrototype($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultShortDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultShortDescription', [$value]);

        return parent::setDefaultShortDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaTitle($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaTitle', [$value]);

        return parent::setDefaultMetaTitle($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaKeyword', [$value]);

        return parent::setDefaultMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaDescription', [$value]);

        return parent::setDefaultMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLongDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLongDescription', [$value]);

        return parent::setDefaultLongDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDecrementQuantity($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecrementQuantity', [$value]);

        return parent::setDecrementQuantity($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setBackOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackOrder', [$value]);

        return parent::setBackOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailabilityDate($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailabilityDate', [$value]);

        return parent::setAvailabilityDate($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProducts($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProducts', [$value]);

        return parent::removeProducts($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', [$value]);

        return parent::removeProduct($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaTitles', [$value]);

        return parent::removeMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaTitl($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaTitl', [$value]);

        return parent::removeMetaTitl($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaKeywords', [$value]);

        return parent::removeMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaKeyword', [$value]);

        return parent::removeMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaDescriptions', [$value]);

        return parent::removeMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaDescription', [$value]);

        return parent::removeMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', [$localization]);

        return parent::getTitle($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getSmallImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSmallImage', []);

        return parent::getSmallImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototype', [$localization]);

        return parent::getSlugPrototype($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', [$localization]);

        return parent::getShortDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', []);

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function getMinimumQuantityToOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinimumQuantityToOrder', []);

        return parent::getMinimumQuantityToOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitles', []);

        return parent::getMetaTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', [$localization]);

        return parent::getMetaTitle($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', []);

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeyword(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeyword', [$localization]);

        return parent::getMetaKeyword($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescriptions', []);

        return parent::getMetaDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', [$localization]);

        return parent::getMetaDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaximumQuantityToOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaximumQuantityToOrder', []);

        return parent::getMaximumQuantityToOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getManageInventory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManageInventory', []);

        return parent::getManageInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function getLowInventoryThreshold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLowInventoryThreshold', []);

        return parent::getLowInventoryThreshold();
    }

    /**
     * {@inheritDoc}
     */
    public function getLongDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongDescription', [$localization]);

        return parent::getLongDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getLargeImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLargeImage', []);

        return parent::getLargeImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsUpcoming()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsUpcoming', []);

        return parent::getIsUpcoming();
    }

    /**
     * {@inheritDoc}
     */
    public function getInventoryThreshold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInventoryThreshold', []);

        return parent::getInventoryThreshold();
    }

    /**
     * {@inheritDoc}
     */
    public function getHighlightLowInventory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHighlightLowInventory', []);

        return parent::getHighlightLowInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultTitle', []);

        return parent::getDefaultTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultSlugPrototype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultSlugPrototype', []);

        return parent::getDefaultSlugPrototype();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultShortDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultShortDescription', []);

        return parent::getDefaultShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaTitle', []);

        return parent::getDefaultMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaKeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaKeyword', []);

        return parent::getDefaultMetaKeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaDescription', []);

        return parent::getDefaultMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLongDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLongDescription', []);

        return parent::getDefaultLongDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDecrementQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecrementQuantity', []);

        return parent::getDecrementQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getBackOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackOrder', []);

        return parent::getBackOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailabilityDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailabilityDate', []);

        return parent::getAvailabilityDate();
    }

    /**
     * {@inheritDoc}
     */
    public function addProducts($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProducts', [$value]);

        return parent::addProducts($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', [$value]);

        return parent::addProduct($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaTitles', [$value]);

        return parent::addMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaTitl($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaTitl', [$value]);

        return parent::addMetaTitl($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaKeywords', [$value]);

        return parent::addMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaKeyword', [$value]);

        return parent::addMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaDescriptions', [$value]);

        return parent::addMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaDescription', [$value]);

        return parent::addMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

    /**
     * {@inheritDoc}
     */
    public function getLeft()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLeft', []);

        return parent::getLeft();
    }

    /**
     * {@inheritDoc}
     */
    public function setLeft($left)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLeft', [$left]);

        return parent::setLeft($left);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getRight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRight', []);

        return parent::getRight();
    }

    /**
     * {@inheritDoc}
     */
    public function setRight($right)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRight', [$right]);

        return parent::setRight($right);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoot()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoot', []);

        return parent::getRoot();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoot($root)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoot', [$root]);

        return parent::setRoot($root);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototypesWithRedirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototypesWithRedirect', []);

        return parent::getSlugPrototypesWithRedirect();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlugPrototypesWithRedirect(\Oro\Bundle\RedirectBundle\Model\SlugPrototypesWithRedirect $slugPrototypesWithRedirect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlugPrototypesWithRedirect', [$slugPrototypesWithRedirect]);

        return parent::setSlugPrototypesWithRedirect($slugPrototypesWithRedirect);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototypes', []);

        return parent::getSlugPrototypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlugPrototype', [$slugPrototype]);

        return parent::addSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlugPrototype', [$slugPrototype]);

        return parent::removeSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function hasSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSlugPrototype', [$slugPrototype]);

        return parent::hasSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugs', []);

        return parent::getSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlug', [$slug]);

        return parent::addSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlug', [$slug]);

        return parent::removeSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function resetSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetSlugs', []);

        return parent::resetSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function hasSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSlug', [$slug]);

        return parent::hasSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseSlug', []);

        return parent::getBaseSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugByLocalization(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugByLocalization', [$localization]);

        return parent::getSlugByLocalization($localization);
    }

}
