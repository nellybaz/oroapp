<?php

namespace Proxies\__CG__\Oro\Bundle\MailChimpBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Campaign extends \Oro\Bundle\MailChimpBundle\Entity\Campaign implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'originId', 'channel', 'owner', 'webId', 'title', 'subject', 'fromEmail', 'fromName', 'template', 'staticSegment', 'subscribersList', 'emailCampaign', 'contentType', 'type', 'status', 'sendTime', 'lastOpenDate', 'archiveUrl', 'archiveUrlLong', 'emailsSent', 'testsSent', 'testsRemain', 'syntaxErrors', 'hardBounces', 'softBounces', 'unsubscribes', 'abuseReports', 'forwards', 'forwardsOpens', 'opens', 'uniqueOpens', 'clicks', 'uniqueClicks', 'usersWhoClicked', 'uniqueLikes', 'recipientLikes', 'facebookLikes', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'id', 'originId', 'channel', 'owner', 'webId', 'title', 'subject', 'fromEmail', 'fromName', 'template', 'staticSegment', 'subscribersList', 'emailCampaign', 'contentType', 'type', 'status', 'sendTime', 'lastOpenDate', 'archiveUrl', 'archiveUrlLong', 'emailsSent', 'testsSent', 'testsRemain', 'syntaxErrors', 'hardBounces', 'softBounces', 'unsubscribes', 'abuseReports', 'forwards', 'forwardsOpens', 'opens', 'uniqueOpens', 'clicks', 'uniqueClicks', 'usersWhoClicked', 'uniqueLikes', 'recipientLikes', 'facebookLikes', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Campaign $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel(\Oro\Bundle\IntegrationBundle\Entity\Channel $integration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$integration]);

        return parent::setChannel($integration);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailCampaign', []);

        return parent::getEmailCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailCampaign(\Oro\Bundle\CampaignBundle\Entity\EmailCampaign $emailCampaign = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailCampaign', [$emailCampaign]);

        return parent::setEmailCampaign($emailCampaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getFromEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFromEmail', []);

        return parent::getFromEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setFromEmail($fromEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFromEmail', [$fromEmail]);

        return parent::setFromEmail($fromEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getFromName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFromName', []);

        return parent::getFromName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFromName($fromName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFromName', [$fromName]);

        return parent::setFromName($fromName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubject', []);

        return parent::getSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubject($subject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubject', [$subject]);

        return parent::setSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbuseReports()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbuseReports', []);

        return parent::getAbuseReports();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbuseReports($abuseReports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbuseReports', [$abuseReports]);

        return parent::setAbuseReports($abuseReports);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchiveUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchiveUrl', []);

        return parent::getArchiveUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchiveUrl($archiveUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchiveUrl', [$archiveUrl]);

        return parent::setArchiveUrl($archiveUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getArchiveUrlLong()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArchiveUrlLong', []);

        return parent::getArchiveUrlLong();
    }

    /**
     * {@inheritDoc}
     */
    public function setArchiveUrlLong($archiveUrlLong)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArchiveUrlLong', [$archiveUrlLong]);

        return parent::setArchiveUrlLong($archiveUrlLong);
    }

    /**
     * {@inheritDoc}
     */
    public function getClicks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClicks', []);

        return parent::getClicks();
    }

    /**
     * {@inheritDoc}
     */
    public function setClicks($clicks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClicks', [$clicks]);

        return parent::setClicks($clicks);
    }

    /**
     * {@inheritDoc}
     */
    public function getContentType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContentType', []);

        return parent::getContentType();
    }

    /**
     * {@inheritDoc}
     */
    public function setContentType($contentType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContentType', [$contentType]);

        return parent::setContentType($contentType);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailsSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailsSent', []);

        return parent::getEmailsSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailsSent($emailsSent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailsSent', [$emailsSent]);

        return parent::setEmailsSent($emailsSent);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookLikes', []);

        return parent::getFacebookLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookLikes($facebookLikes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookLikes', [$facebookLikes]);

        return parent::setFacebookLikes($facebookLikes);
    }

    /**
     * {@inheritDoc}
     */
    public function getForwards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForwards', []);

        return parent::getForwards();
    }

    /**
     * {@inheritDoc}
     */
    public function setForwards($forwards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForwards', [$forwards]);

        return parent::setForwards($forwards);
    }

    /**
     * {@inheritDoc}
     */
    public function getForwardsOpens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForwardsOpens', []);

        return parent::getForwardsOpens();
    }

    /**
     * {@inheritDoc}
     */
    public function setForwardsOpens($forwardsOpens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForwardsOpens', [$forwardsOpens]);

        return parent::setForwardsOpens($forwardsOpens);
    }

    /**
     * {@inheritDoc}
     */
    public function getHardBounces()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHardBounces', []);

        return parent::getHardBounces();
    }

    /**
     * {@inheritDoc}
     */
    public function setHardBounces($hardBounces)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHardBounces', [$hardBounces]);

        return parent::setHardBounces($hardBounces);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastOpenDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastOpenDate', []);

        return parent::getLastOpenDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastOpenDate($lastOpenDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastOpenDate', [$lastOpenDate]);

        return parent::setLastOpenDate($lastOpenDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpens', []);

        return parent::getOpens();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpens($opens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpens', [$opens]);

        return parent::setOpens($opens);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginId', []);

        return parent::getOriginId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginId($originId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginId', [$originId]);

        return parent::setOriginId($originId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecipientLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecipientLikes', []);

        return parent::getRecipientLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecipientLikes($recipientLikes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecipientLikes', [$recipientLikes]);

        return parent::setRecipientLikes($recipientLikes);
    }

    /**
     * {@inheritDoc}
     */
    public function getSendTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSendTime', []);

        return parent::getSendTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSendTime($sendTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSendTime', [$sendTime]);

        return parent::setSendTime($sendTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSoftBounces()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSoftBounces', []);

        return parent::getSoftBounces();
    }

    /**
     * {@inheritDoc}
     */
    public function setSoftBounces($softBounces)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSoftBounces', [$softBounces]);

        return parent::setSoftBounces($softBounces);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStaticSegment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStaticSegment', []);

        return parent::getStaticSegment();
    }

    /**
     * {@inheritDoc}
     */
    public function setStaticSegment(\Oro\Bundle\MailChimpBundle\Entity\StaticSegment $segment = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStaticSegment', [$segment]);

        return parent::setStaticSegment($segment);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribersList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribersList', []);

        return parent::getSubscribersList();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribersList(\Oro\Bundle\MailChimpBundle\Entity\SubscribersList $subscribersList = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribersList', [$subscribersList]);

        return parent::setSubscribersList($subscribersList);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyntaxErrors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyntaxErrors', []);

        return parent::getSyntaxErrors();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyntaxErrors($syntaxErrors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyntaxErrors', [$syntaxErrors]);

        return parent::setSyntaxErrors($syntaxErrors);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestsRemain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestsRemain', []);

        return parent::getTestsRemain();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestsRemain($testsRemain)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestsRemain', [$testsRemain]);

        return parent::setTestsRemain($testsRemain);
    }

    /**
     * {@inheritDoc}
     */
    public function getTestsSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTestsSent', []);

        return parent::getTestsSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setTestsSent($testsSent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTestsSent', [$testsSent]);

        return parent::setTestsSent($testsSent);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueClicks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueClicks', []);

        return parent::getUniqueClicks();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueClicks($uniqueClicks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueClicks', [$uniqueClicks]);

        return parent::setUniqueClicks($uniqueClicks);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueLikes', []);

        return parent::getUniqueLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueLikes($uniqueLikes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueLikes', [$uniqueLikes]);

        return parent::setUniqueLikes($uniqueLikes);
    }

    /**
     * {@inheritDoc}
     */
    public function getUniqueOpens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUniqueOpens', []);

        return parent::getUniqueOpens();
    }

    /**
     * {@inheritDoc}
     */
    public function setUniqueOpens($uniqueOpens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUniqueOpens', [$uniqueOpens]);

        return parent::setUniqueOpens($uniqueOpens);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribes', []);

        return parent::getUnsubscribes();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribes($unsubscribes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribes', [$unsubscribes]);

        return parent::setUnsubscribes($unsubscribes);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsersWhoClicked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsersWhoClicked', []);

        return parent::getUsersWhoClicked();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsersWhoClicked($usersWhoClicked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsersWhoClicked', [$usersWhoClicked]);

        return parent::setUsersWhoClicked($usersWhoClicked);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebId', []);

        return parent::getWebId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebId($webId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebId', [$webId]);

        return parent::setWebId($webId);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivityUpdateState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivityUpdateState', []);

        return parent::getActivityUpdateState();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

}
