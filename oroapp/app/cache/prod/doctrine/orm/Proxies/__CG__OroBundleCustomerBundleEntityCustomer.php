<?php

namespace Proxies\__CG__\Oro\Bundle\CustomerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Customer extends \Oro\Bundle\CustomerBundle\Entity\Customer implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'parent', 'children', 'addresses', 'group', 'users', 'owner', 'organization', 'salesRepresentatives', 'createdAt', 'updatedAt', 'taxCode', 'serialized_data', 'previous_account', 'payment_term_7c4f1e8e', 'lifetime', 'internal_rating', 'dataChannel', 'updatedAtSet'];
        }

        return ['__isInitialized__', 'id', 'name', 'parent', 'children', 'addresses', 'group', 'users', 'owner', 'organization', 'salesRepresentatives', 'createdAt', 'updatedAt', 'taxCode', 'serialized_data', 'previous_account', 'payment_term_7c4f1e8e', 'lifetime', 'internal_rating', 'dataChannel', 'updatedAtSet'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Customer $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\Oro\Bundle\CustomerBundle\Entity\Customer $parent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function addAddress(\Oro\Bundle\CustomerBundle\Entity\AbstractDefaultTypedAddress $address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAddress', [$address]);

        return parent::addAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAddress(\Oro\Bundle\CustomerBundle\Entity\AbstractDefaultTypedAddress $address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAddress', [$address]);

        return parent::removeAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressByTypeName($typeName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressByTypeName', [$typeName]);

        return parent::getAddressByTypeName($typeName);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryAddress', []);

        return parent::getPrimaryAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddresses()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddresses', []);

        return parent::getAddresses();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroup(\Oro\Bundle\CustomerBundle\Entity\CustomerGroup $group = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroup', [$group]);

        return parent::setGroup($group);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroup', []);

        return parent::getGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\Oro\Bundle\CustomerBundle\Entity\Customer $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$child]);

        return parent::addChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\Oro\Bundle\CustomerBundle\Entity\Customer $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', [$child]);

        return parent::removeChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\Oro\Bundle\CustomerBundle\Entity\CustomerUser $customerUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$customerUser]);

        return parent::addUser($customerUser);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\Oro\Bundle\CustomerBundle\Entity\CustomerUser $customerUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$customerUser]);

        return parent::removeUser($customerUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\UserBundle\Entity\User $owner, $force = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner, $force]);

        return parent::setOwner($owner, $force);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalesRepresentatives()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalesRepresentatives', []);

        return parent::getSalesRepresentatives();
    }

    /**
     * {@inheritDoc}
     */
    public function addSalesRepresentative(\Oro\Bundle\UserBundle\Entity\User $salesRepresentative)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSalesRepresentative', [$salesRepresentative]);

        return parent::addSalesRepresentative($salesRepresentative);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSalesRepresentative(\Oro\Bundle\UserBundle\Entity\User $salesRepresentative)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSalesRepresentative', [$salesRepresentative]);

        return parent::removeSalesRepresentative($salesRepresentative);
    }

    /**
     * {@inheritDoc}
     */
    public function hasSalesRepresentatives()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSalesRepresentatives', []);

        return parent::hasSalesRepresentatives();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCode($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCode', [$value]);

        return parent::setTaxCode($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviousAccount($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviousAccount', [$value]);

        return parent::setPreviousAccount($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPaymentTerm7c4f1e8e($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaymentTerm7c4f1e8e', [$value]);

        return parent::setPaymentTerm7c4f1e8e($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setLifetime($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLifetime', [$value]);

        return parent::setLifetime($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setInternalRating($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInternalRating', [$value]);

        return parent::setInternalRating($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDataChannel($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataChannel', [$value]);

        return parent::setDataChannel($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCode', []);

        return parent::getTaxCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviousAccount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviousAccount', []);

        return parent::getPreviousAccount();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentTerm7c4f1e8e()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentTerm7c4f1e8e', []);

        return parent::getPaymentTerm7c4f1e8e();
    }

    /**
     * {@inheritDoc}
     */
    public function getLifetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLifetime', []);

        return parent::getLifetime();
    }

    /**
     * {@inheritDoc}
     */
    public function getInternalRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternalRating', []);

        return parent::getInternalRating();
    }

    /**
     * {@inheritDoc}
     */
    public function getDataChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataChannel', []);

        return parent::getDataChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

}
