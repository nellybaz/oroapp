<?php

namespace Proxies\__CG__\Oro\Bundle\CommerceMenuBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MenuUpdate extends \Oro\Bundle\CommerceMenuBundle\Entity\MenuUpdate implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'condition', 'menuUserAgentConditions', 'screens', 'serialized_data', 'image', 'id', 'key', 'parentKey', 'titles', 'descriptions', 'uri', 'menu', 'scope', 'icon', 'active', 'priority', 'divider', 'custom'];
        }

        return ['__isInitialized__', 'condition', 'menuUserAgentConditions', 'screens', 'serialized_data', 'image', 'id', 'key', 'parentKey', 'titles', 'descriptions', 'uri', 'menu', 'scope', 'icon', 'active', 'priority', 'divider', 'custom'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MenuUpdate $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getExtras()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtras', []);

        return parent::getExtras();
    }

    /**
     * {@inheritDoc}
     */
    public function getCondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCondition', []);

        return parent::getCondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setCondition($condition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCondition', [$condition]);

        return parent::setCondition($condition);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenuUserAgentConditions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenuUserAgentConditions', []);

        return parent::getMenuUserAgentConditions();
    }

    /**
     * {@inheritDoc}
     */
    public function addMenuUserAgentCondition(\Oro\Bundle\CommerceMenuBundle\Entity\MenuUserAgentCondition $menuUserAgentCondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMenuUserAgentCondition', [$menuUserAgentCondition]);

        return parent::addMenuUserAgentCondition($menuUserAgentCondition);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMenuUserAgentCondition(\Oro\Bundle\CommerceMenuBundle\Entity\MenuUserAgentCondition $menuUserAgentCondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMenuUserAgentCondition', [$menuUserAgentCondition]);

        return parent::removeMenuUserAgentCondition($menuUserAgentCondition);
    }

    /**
     * {@inheritDoc}
     */
    public function getScreens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScreens', []);

        return parent::getScreens();
    }

    /**
     * {@inheritDoc}
     */
    public function setScreens(array $screens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScreens', [$screens]);

        return parent::setScreens($screens);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$value]);

        return parent::setImage($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultTitle($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultTitle', [$value]);

        return parent::setDefaultTitle($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultDescription', [$value]);

        return parent::setDefaultDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', [$localization]);

        return parent::getTitle($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', [$localization]);

        return parent::getDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultTitle', []);

        return parent::getDefaultTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultDescription', []);

        return parent::getDefaultDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getKey', []);

        return parent::getKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setKey($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setKey', [$key]);

        return parent::setKey($key);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentKey', []);

        return parent::getParentKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setParentKey($parentKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParentKey', [$parentKey]);

        return parent::setParentKey($parentKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitles', []);

        return parent::getTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function addTitle(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTitle', [$title]);

        return parent::addTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTitle(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTitle', [$title]);

        return parent::removeTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptions', []);

        return parent::getDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescription', [$description]);

        return parent::addDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescription', [$description]);

        return parent::removeDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', []);

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri($uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', [$uri]);

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getMenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMenu', []);

        return parent::getMenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setMenu($menu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMenu', [$menu]);

        return parent::setMenu($menu);
    }

    /**
     * {@inheritDoc}
     */
    public function getIcon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcon', []);

        return parent::getIcon();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcon($icon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcon', [$icon]);

        return parent::setIcon($icon);
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getPriority()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPriority', []);

        return parent::getPriority();
    }

    /**
     * {@inheritDoc}
     */
    public function setPriority($priority)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPriority', [$priority]);

        return parent::setPriority($priority);
    }

    /**
     * {@inheritDoc}
     */
    public function isDivider()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDivider', []);

        return parent::isDivider();
    }

    /**
     * {@inheritDoc}
     */
    public function setDivider($divider)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDivider', [$divider]);

        return parent::setDivider($divider);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function isCustom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCustom', []);

        return parent::isCustom();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustom($custom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustom', [$custom]);

        return parent::setCustom($custom);
    }

    /**
     * {@inheritDoc}
     */
    public function getScope()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScope', []);

        return parent::getScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setScope(\Oro\Bundle\ScopeBundle\Entity\Scope $scope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScope', [$scope]);

        return parent::setScope($scope);
    }

}
