<?php

namespace Proxies\__CG__\Oro\Bundle\WorkflowBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class WorkflowItem extends \Oro\Bundle\WorkflowBundle\Entity\WorkflowItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'workflowName', 'entityId', 'entityClass', 'currentStep', 'definition', 'transitionRecords', 'aclIdentities', 'restrictionIdentities', 'created', 'updated', 'serializedData', 'entity', 'data', 'result', 'serializer', 'serializeFormat', 'serialized_data'];
        }

        return ['__isInitialized__', 'id', 'workflowName', 'entityId', 'entityClass', 'currentStep', 'definition', 'transitionRecords', 'aclIdentities', 'restrictionIdentities', 'created', 'updated', 'serializedData', 'entity', 'data', 'result', 'serializer', 'serializeFormat', 'serialized_data'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (WorkflowItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function merge(\Oro\Bundle\WorkflowBundle\Entity\WorkflowItem $source)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'merge', [$source]);

        return parent::merge($source);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkflowName($workflowName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkflowName', [$workflowName]);

        return parent::setWorkflowName($workflowName);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkflowName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkflowName', []);

        return parent::getWorkflowName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentStep($currentStep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentStep', [$currentStep]);

        return parent::setCurrentStep($currentStep);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentStep()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentStep', []);

        return parent::getCurrentStep();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityId($entityId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityId', [$entityId]);

        return parent::setEntityId($entityId);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityId', []);

        return parent::getEntityId();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityClass($entityClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityClass', [$entityClass]);

        return parent::setEntityClass($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityClass', []);

        return parent::getEntityClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefinition(\Oro\Bundle\WorkflowBundle\Entity\WorkflowDefinition $definition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefinition', [$definition]);

        return parent::setDefinition($definition);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefinition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefinition', []);

        return parent::getDefinition();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$data]);

        return parent::setSerializedData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function setData(\Oro\Bundle\WorkflowBundle\Model\WorkflowData $data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', [$data]);

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function setEntity($entity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntity', [$entity]);

        return parent::setEntity($entity);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntity', []);

        return parent::getEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', []);

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializer(\Oro\Bundle\WorkflowBundle\Serializer\WorkflowAwareSerializer $serializer, $format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializer', [$serializer, $format]);

        return parent::setSerializer($serializer, $format);
    }

    /**
     * {@inheritDoc}
     */
    public function getResult()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResult', []);

        return parent::getResult();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransitionRecords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransitionRecords', []);

        return parent::getTransitionRecords();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransitionRecord(\Oro\Bundle\WorkflowBundle\Entity\WorkflowTransitionRecord $transitionRecord)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransitionRecord', [$transitionRecord]);

        return parent::addTransitionRecord($transitionRecord);
    }

    /**
     * {@inheritDoc}
     */
    public function getAclIdentities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAclIdentities', []);

        return parent::getAclIdentities();
    }

    /**
     * {@inheritDoc}
     */
    public function setAclIdentities($aclIdentities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAclIdentities', [$aclIdentities]);

        return parent::setAclIdentities($aclIdentities);
    }

    /**
     * {@inheritDoc}
     */
    public function addEntityAcl(\Oro\Bundle\WorkflowBundle\Entity\WorkflowEntityAclIdentity $aclIdentity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEntityAcl', [$aclIdentity]);

        return parent::addEntityAcl($aclIdentity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEntityAcl(\Oro\Bundle\WorkflowBundle\Entity\WorkflowEntityAclIdentity $aclIdentity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEntityAcl', [$aclIdentity]);

        return parent::removeEntityAcl($aclIdentity);
    }

    /**
     * {@inheritDoc}
     */
    public function hasAclIdentityByAttribute($attribute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasAclIdentityByAttribute', [$attribute]);

        return parent::hasAclIdentityByAttribute($attribute);
    }

    /**
     * {@inheritDoc}
     */
    public function getAclIdentityByAttributeStep($attributeStep)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAclIdentityByAttributeStep', [$attributeStep]);

        return parent::getAclIdentityByAttributeStep($attributeStep);
    }

    /**
     * {@inheritDoc}
     */
    public function getRestrictionIdentities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRestrictionIdentities', []);

        return parent::getRestrictionIdentities();
    }

    /**
     * {@inheritDoc}
     */
    public function addRestrictionIdentity(\Oro\Bundle\WorkflowBundle\Entity\WorkflowRestrictionIdentity $restrictionIdentity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRestrictionIdentity', [$restrictionIdentity]);

        return parent::addRestrictionIdentity($restrictionIdentity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRestrictionIdentity(\Oro\Bundle\WorkflowBundle\Entity\WorkflowRestrictionIdentity $restrictionIdentity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRestrictionIdentity', [$restrictionIdentity]);

        return parent::removeRestrictionIdentity($restrictionIdentity);
    }

    /**
     * {@inheritDoc}
     */
    public function setRestrictionIdentities($restrictionIdentities)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRestrictionIdentities', [$restrictionIdentities]);

        return parent::setRestrictionIdentities($restrictionIdentities);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', []);

        return parent::setUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setRedirectUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRedirectUrl', [$url]);

        return parent::setRedirectUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
