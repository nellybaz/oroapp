<?php

namespace Proxies\__CG__\Oro\Bundle\ShoppingListBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ShoppingList extends \Oro\Bundle\ShoppingListBundle\Entity\ShoppingList implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'label', 'notes', 'website', 'lineItems', 'current', 'totals', 'subtotal', 'visitors', 'serialized_data', 'default_visitors', 'createdAt', 'updatedAt', 'updatedAtSet', 'customerUser', 'customer', 'owner', 'organization'];
        }

        return ['__isInitialized__', 'id', 'label', 'notes', 'website', 'lineItems', 'current', 'totals', 'subtotal', 'visitors', 'serialized_data', 'default_visitors', 'createdAt', 'updatedAt', 'updatedAtSet', 'customerUser', 'customer', 'owner', 'organization'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ShoppingList $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', [$label]);

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function addLineItem(\Oro\Bundle\ShoppingListBundle\Entity\LineItem $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLineItem', [$item]);

        return parent::addLineItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLineItem(\Oro\Bundle\ShoppingListBundle\Entity\LineItem $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLineItem', [$item]);

        return parent::removeLineItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getLineItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLineItems', []);

        return parent::getLineItems();
    }

    /**
     * {@inheritDoc}
     */
    public function addTotal(\Oro\Bundle\ShoppingListBundle\Entity\ShoppingListTotal $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTotal', [$item]);

        return parent::addTotal($item);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTotal(\Oro\Bundle\ShoppingListBundle\Entity\ShoppingListTotal $item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTotal', [$item]);

        return parent::removeTotal($item);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotals', []);

        return parent::getTotals();
    }

    /**
     * {@inheritDoc}
     */
    public function isCurrent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCurrent', []);

        return parent::isCurrent();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrent($current)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrent', [$current]);

        return parent::setCurrent($current);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite(\Oro\Bundle\WebsiteBundle\Entity\Website $website)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', [$website]);

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', []);

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceDocument()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceDocument', []);

        return parent::getSourceDocument();
    }

    /**
     * {@inheritDoc}
     */
    public function getSourceDocumentIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourceDocumentIdentifier', []);

        return parent::getSourceDocumentIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtotal', []);

        return parent::getSubtotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtotal(\Oro\Bundle\PricingBundle\SubtotalProcessor\Model\Subtotal $subtotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtotal', [$subtotal]);

        return parent::setSubtotal($subtotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitor', []);

        return parent::getVisitor();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisitors($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisitors', [$value]);

        return parent::setVisitors($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultVisitors($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultVisitors', [$value]);

        return parent::setDefaultVisitors($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVisitors($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVisitors', [$value]);

        return parent::removeVisitors($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVisitor($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVisitor', [$value]);

        return parent::removeVisitor($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitors', []);

        return parent::getVisitors();
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultVisitors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultVisitors', []);

        return parent::getDefaultVisitors();
    }

    /**
     * {@inheritDoc}
     */
    public function addVisitors($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVisitors', [$value]);

        return parent::addVisitors($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addVisitor($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVisitor', [$value]);

        return parent::addVisitor($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerUser', []);

        return parent::getCustomerUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerUser(\Oro\Bundle\CustomerBundle\Entity\CustomerUser $customerUser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerUser', [$customerUser]);

        return parent::setCustomerUser($customerUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', []);

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Oro\Bundle\CustomerBundle\Entity\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', [$customer]);

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\UserBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

}
