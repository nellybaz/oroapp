<?php

namespace Proxies\__CG__\Oro\Bundle\DotmailerBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Activity extends \Oro\Bundle\DotmailerBundle\Entity\Activity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'channel', 'email', 'numOpens', 'numPageViews', 'numClicks', 'numForwards', 'numEstimatedForwards', 'numReplies', 'dateSent', 'dateFirstOpened', 'dateLastOpened', 'firstOpenIp', 'unsubscribed', 'softBounced', 'hardBounced', 'owner', 'campaign', 'contact', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'id', 'channel', 'email', 'numOpens', 'numPageViews', 'numClicks', 'numForwards', 'numEstimatedForwards', 'numReplies', 'dateSent', 'dateFirstOpened', 'dateLastOpened', 'firstOpenIp', 'unsubscribed', 'softBounced', 'hardBounced', 'owner', 'campaign', 'contact', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Activity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel(\Oro\Bundle\IntegrationBundle\Entity\Channel $channel = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$channel]);

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact(\Oro\Bundle\DotmailerBundle\Entity\Contact $contact = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function getNumOpens()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumOpens', []);

        return parent::getNumOpens();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumOpens($numOpens)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumOpens', [$numOpens]);

        return parent::setNumOpens($numOpens);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumPageViews()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumPageViews', []);

        return parent::getNumPageViews();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumPageViews($numPageViews)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumPageViews', [$numPageViews]);

        return parent::setNumPageViews($numPageViews);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumClicks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumClicks', []);

        return parent::getNumClicks();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumClicks($numClicks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumClicks', [$numClicks]);

        return parent::setNumClicks($numClicks);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumForwards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumForwards', []);

        return parent::getNumForwards();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumForwards($numForwards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumForwards', [$numForwards]);

        return parent::setNumForwards($numForwards);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumEstimatedForwards()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumEstimatedForwards', []);

        return parent::getNumEstimatedForwards();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumEstimatedForwards($numEstimatedForwards)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumEstimatedForwards', [$numEstimatedForwards]);

        return parent::setNumEstimatedForwards($numEstimatedForwards);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumReplies()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumReplies', []);

        return parent::getNumReplies();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumReplies($numReplies)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumReplies', [$numReplies]);

        return parent::setNumReplies($numReplies);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateSent', []);

        return parent::getDateSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateSent(\DateTime $dateSent = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateSent', [$dateSent]);

        return parent::setDateSent($dateSent);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFirstOpened()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFirstOpened', []);

        return parent::getDateFirstOpened();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFirstOpened(\DateTime $dateFirstOpened = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFirstOpened', [$dateFirstOpened]);

        return parent::setDateFirstOpened($dateFirstOpened);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateLastOpened()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateLastOpened', []);

        return parent::getDateLastOpened();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateLastOpened(\DateTime $dateLastOpened = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateLastOpened', [$dateLastOpened]);

        return parent::setDateLastOpened($dateLastOpened);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstOpenIp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstOpenIp', []);

        return parent::getFirstOpenIp();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstOpenIp($firstOpenIp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstOpenIp', [$firstOpenIp]);

        return parent::setFirstOpenIp($firstOpenIp);
    }

    /**
     * {@inheritDoc}
     */
    public function isUnsubscribed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUnsubscribed', []);

        return parent::isUnsubscribed();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribed($unsubscribed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribed', [$unsubscribed]);

        return parent::setUnsubscribed($unsubscribed);
    }

    /**
     * {@inheritDoc}
     */
    public function isSoftBounced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSoftBounced', []);

        return parent::isSoftBounced();
    }

    /**
     * {@inheritDoc}
     */
    public function setSoftBounced($softBounced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSoftBounced', [$softBounced]);

        return parent::setSoftBounced($softBounced);
    }

    /**
     * {@inheritDoc}
     */
    public function isHardBounced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isHardBounced', []);

        return parent::isHardBounced();
    }

    /**
     * {@inheritDoc}
     */
    public function setHardBounced($hardBounced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHardBounced', [$hardBounced]);

        return parent::setHardBounced($hardBounced);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\OrganizationBundle\Entity\Organization $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaign', []);

        return parent::getCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaign(\Oro\Bundle\DotmailerBundle\Entity\Campaign $campaign = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaign', [$campaign]);

        return parent::setCampaign($campaign);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

}
