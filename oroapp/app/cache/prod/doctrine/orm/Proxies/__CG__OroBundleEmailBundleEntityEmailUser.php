<?php

namespace Proxies\__CG__\Oro\Bundle\EmailBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmailUser extends \Oro\Bundle\EmailBundle\Entity\EmailUser implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'createdAt', 'organization', 'owner', 'mailboxOwner', 'receivedAt', 'seen', 'origin', 'folders', 'email', 'unsyncedFlagCount'];
        }

        return ['__isInitialized__', 'id', 'createdAt', 'organization', 'owner', 'mailboxOwner', 'receivedAt', 'seen', 'origin', 'folders', 'email', 'unsyncedFlagCount'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmailUser $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getFolders()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFolders', []);

        return parent::getFolders();
    }

    /**
     * {@inheritDoc}
     */
    public function addFolder(\Oro\Bundle\EmailBundle\Entity\EmailFolder $folder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFolder', [$folder]);

        return parent::addFolder($folder);
    }

    /**
     * {@inheritDoc}
     */
    public function setFolder(\Oro\Bundle\EmailBundle\Entity\EmailFolder $folder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFolder', [$folder]);

        return parent::setFolder($folder);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFolder(\Oro\Bundle\EmailBundle\Entity\EmailFolder $folder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFolder', [$folder]);

        return parent::removeFolder($folder);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owningUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owningUser]);

        return parent::setOwner($owningUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getReceivedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReceivedAt', []);

        return parent::getReceivedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setReceivedAt($receivedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReceivedAt', [$receivedAt]);

        return parent::setReceivedAt($receivedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isSeen()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSeen', []);

        return parent::isSeen();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeen($seen)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeen', [$seen]);

        return parent::setSeen($seen);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(\Oro\Bundle\EmailBundle\Entity\Email $email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function beforeSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeSave', []);

        return parent::beforeSave();
    }

    /**
     * {@inheritDoc}
     */
    public function getMailboxOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailboxOwner', []);

        return parent::getMailboxOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailboxOwner(\Oro\Bundle\EmailBundle\Entity\Mailbox $mailboxOwner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailboxOwner', [$mailboxOwner]);

        return parent::setMailboxOwner($mailboxOwner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrigin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrigin', []);

        return parent::getOrigin();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrigin(\Oro\Bundle\EmailBundle\Entity\EmailOrigin $origin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrigin', [$origin]);

        return parent::setOrigin($origin);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsyncedFlagCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsyncedFlagCount', []);

        return parent::getUnsyncedFlagCount();
    }

    /**
     * {@inheritDoc}
     */
    public function incrementUnsyncedFlagCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'incrementUnsyncedFlagCount', []);

        return parent::incrementUnsyncedFlagCount();
    }

    /**
     * {@inheritDoc}
     */
    public function decrementUnsyncedFlagCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'decrementUnsyncedFlagCount', []);

        return parent::decrementUnsyncedFlagCount();
    }

    /**
     * {@inheritDoc}
     */
    public function isOutgoing()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOutgoing', []);

        return parent::isOutgoing();
    }

    /**
     * {@inheritDoc}
     */
    public function isIncoming()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isIncoming', []);

        return parent::isIncoming();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
