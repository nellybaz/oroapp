<?php

namespace Proxies\__CG__\Oro\Bundle\SecurityBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Permission extends \Oro\Bundle\SecurityBundle\Entity\Permission implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'label', 'applyToAll', 'applyToEntities', 'excludeEntities', 'groupNames', 'description'];
        }

        return ['__isInitialized__', 'id', 'name', 'label', 'applyToAll', 'applyToEntities', 'excludeEntities', 'groupNames', 'description'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Permission $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', [$label]);

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function isApplyToAll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isApplyToAll', []);

        return parent::isApplyToAll();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplyToAll($applyToAll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplyToAll', [$applyToAll]);

        return parent::setApplyToAll($applyToAll);
    }

    /**
     * {@inheritDoc}
     */
    public function getApplyToEntities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplyToEntities', []);

        return parent::getApplyToEntities();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplyToEntities(\Doctrine\Common\Collections\Collection $applyToEntities = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplyToEntities', [$applyToEntities]);

        return parent::setApplyToEntities($applyToEntities);
    }

    /**
     * {@inheritDoc}
     */
    public function addApplyToEntity(\Oro\Bundle\SecurityBundle\Entity\PermissionEntity $permissionEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addApplyToEntity', [$permissionEntity]);

        return parent::addApplyToEntity($permissionEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeApplyToEntity(\Oro\Bundle\SecurityBundle\Entity\PermissionEntity $permissionEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeApplyToEntity', [$permissionEntity]);

        return parent::removeApplyToEntity($permissionEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludeEntities()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludeEntities', []);

        return parent::getExcludeEntities();
    }

    /**
     * {@inheritDoc}
     */
    public function setExcludeEntities(\Doctrine\Common\Collections\Collection $excludeEntities = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcludeEntities', [$excludeEntities]);

        return parent::setExcludeEntities($excludeEntities);
    }

    /**
     * {@inheritDoc}
     */
    public function addExcludeEntity(\Oro\Bundle\SecurityBundle\Entity\PermissionEntity $permissionEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExcludeEntity', [$permissionEntity]);

        return parent::addExcludeEntity($permissionEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExcludeEntity(\Oro\Bundle\SecurityBundle\Entity\PermissionEntity $permissionEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExcludeEntity', [$permissionEntity]);

        return parent::removeExcludeEntity($permissionEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupNames', []);

        return parent::getGroupNames();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupNames(array $groupNames = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupNames', [$groupNames]);

        return parent::setGroupNames($groupNames);
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupName($groupName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupName', [$groupName]);

        return parent::addGroupName($groupName);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupName($groupName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupName', [$groupName]);

        return parent::removeGroupName($groupName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function import(\Oro\Bundle\SecurityBundle\Entity\Permission $permission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'import', [$permission]);

        return parent::import($permission);
    }

}
