<?php

namespace Proxies\__CG__\Oro\Bundle\PromotionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AppliedPromotion extends \Oro\Bundle\PromotionBundle\Entity\AppliedPromotion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'active', 'appliedCoupon', 'type', 'sourcePromotionId', 'promotionName', 'configOptions', 'promotionData', 'appliedDiscounts', 'serialized_data', 'order', 'createdAt', 'updatedAt', 'updatedAtSet'];
        }

        return ['__isInitialized__', 'id', 'active', 'appliedCoupon', 'type', 'sourcePromotionId', 'promotionName', 'configOptions', 'promotionData', 'appliedDiscounts', 'serialized_data', 'order', 'createdAt', 'updatedAt', 'updatedAtSet'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AppliedPromotion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function setAppliedCoupon(\Oro\Bundle\PromotionBundle\Entity\AppliedCoupon $appliedCoupon = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAppliedCoupon', [$appliedCoupon]);

        return parent::setAppliedCoupon($appliedCoupon);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppliedCoupon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppliedCoupon', []);

        return parent::getAppliedCoupon();
    }

    /**
     * {@inheritDoc}
     */
    public function setSourcePromotionId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSourcePromotionId', [$id]);

        return parent::setSourcePromotionId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getSourcePromotionId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSourcePromotionId', []);

        return parent::getSourcePromotionId();
    }

    /**
     * {@inheritDoc}
     */
    public function getPromotionName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromotionName', []);

        return parent::getPromotionName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromotionName(string $promotionName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromotionName', [$promotionName]);

        return parent::setPromotionName($promotionName);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfigOptions(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfigOptions', []);

        return parent::getConfigOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfigOptions(array $configOptions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfigOptions', [$configOptions]);

        return parent::setConfigOptions($configOptions);
    }

    /**
     * {@inheritDoc}
     */
    public function getPromotionData(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPromotionData', []);

        return parent::getPromotionData();
    }

    /**
     * {@inheritDoc}
     */
    public function setPromotionData(array $promotionData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPromotionData', [$promotionData]);

        return parent::setPromotionData($promotionData);
    }

    /**
     * {@inheritDoc}
     */
    public function getAppliedDiscounts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAppliedDiscounts', []);

        return parent::getAppliedDiscounts();
    }

    /**
     * {@inheritDoc}
     */
    public function addAppliedDiscount(\Oro\Bundle\PromotionBundle\Entity\AppliedDiscount $appliedDiscount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAppliedDiscount', [$appliedDiscount]);

        return parent::addAppliedDiscount($appliedDiscount);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAppliedDiscount(\Oro\Bundle\PromotionBundle\Entity\AppliedDiscount $appliedDiscount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAppliedDiscount', [$appliedDiscount]);

        return parent::removeAppliedDiscount($appliedDiscount);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$value]);

        return parent::setOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

}
