<?php

namespace Proxies\__CG__\Oro\Bundle\CampaignBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class EmailCampaign extends \Oro\Bundle\CampaignBundle\Entity\EmailCampaign implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'description', 'sent', 'sentAt', 'schedule', 'scheduledFor', 'senderEmail', 'senderName', 'campaign', 'marketingList', 'owner', 'transport', 'transportSettings', 'organization', 'createdAt', 'updatedAt', 'serialized_data'];
        }

        return ['__isInitialized__', 'id', 'name', 'description', 'sent', 'sentAt', 'schedule', 'scheduledFor', 'senderEmail', 'senderName', 'campaign', 'marketingList', 'owner', 'transport', 'transportSettings', 'organization', 'createdAt', 'updatedAt', 'serialized_data'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (EmailCampaign $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityName', []);

        return parent::getEntityName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaign(\Oro\Bundle\CampaignBundle\Entity\Campaign $campaign = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaign', [$campaign]);

        return parent::setCampaign($campaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaign()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaign', []);

        return parent::getCampaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setMarketingList(\Oro\Bundle\MarketingListBundle\Entity\MarketingList $marketingList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarketingList', [$marketingList]);

        return parent::setMarketingList($marketingList);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarketingList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarketingList', []);

        return parent::getMarketingList();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\UserBundle\Entity\User $owner = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function setSent($sent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSent', [$sent]);

        return parent::setSent($sent);
    }

    /**
     * {@inheritDoc}
     */
    public function isSent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSent', []);

        return parent::isSent();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchedule($schedule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchedule', [$schedule]);

        return parent::setSchedule($schedule);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchedule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchedule', []);

        return parent::getSchedule();
    }

    /**
     * {@inheritDoc}
     */
    public function getScheduledFor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScheduledFor', []);

        return parent::getScheduledFor();
    }

    /**
     * {@inheritDoc}
     */
    public function setScheduledFor($scheduledFor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScheduledFor', [$scheduledFor]);

        return parent::setScheduledFor($scheduledFor);
    }

    /**
     * {@inheritDoc}
     */
    public function setSenderEmail($senderEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenderEmail', [$senderEmail]);

        return parent::setSenderEmail($senderEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenderEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenderEmail', []);

        return parent::getSenderEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setSenderName($senderName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSenderName', [$senderName]);

        return parent::setSenderName($senderName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSenderName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSenderName', []);

        return parent::getSenderName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSentAt($sentAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSentAt', [$sentAt]);

        return parent::setSentAt($sentAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSentAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSentAt', []);

        return parent::getSentAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransport()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransport', []);

        return parent::getTransport();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransport($transport)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransport', [$transport]);

        return parent::setTransport($transport);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransportSettings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransportSettings', []);

        return parent::getTransportSettings();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransportSettings($transportSettings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransportSettings', [$transportSettings]);

        return parent::setTransportSettings($transportSettings);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

}
