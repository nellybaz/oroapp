<?php

namespace Proxies\__CG__\Oro\Bundle\WebCatalogBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ContentVariant extends \Oro\Bundle\WebCatalogBundle\Entity\ContentVariant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'type', 'systemPageRoute', 'node', 'default', 'scopes', 'serialized_data', 'product_page_product', 'product_collection_segment', 'exclude_subcategories', 'cms_page', 'category_page_category', 'slugs'];
        }

        return ['__isInitialized__', 'id', 'type', 'systemPageRoute', 'node', 'default', 'scopes', 'serialized_data', 'product_page_product', 'product_collection_segment', 'exclude_subcategories', 'cms_page', 'category_page_category', 'slugs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ContentVariant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getSystemPageRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSystemPageRoute', []);

        return parent::getSystemPageRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setSystemPageRoute($systemPageRoute)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSystemPageRoute', [$systemPageRoute]);

        return parent::setSystemPageRoute($systemPageRoute);
    }

    /**
     * {@inheritDoc}
     */
    public function getNode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNode', []);

        return parent::getNode();
    }

    /**
     * {@inheritDoc}
     */
    public function setNode(\Oro\Bundle\WebCatalogBundle\Entity\ContentNode $node)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNode', [$node]);

        return parent::setNode($node);
    }

    /**
     * {@inheritDoc}
     */
    public function getScopes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScopes', []);

        return parent::getScopes();
    }

    /**
     * {@inheritDoc}
     */
    public function resetScopes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetScopes', []);

        return parent::resetScopes();
    }

    /**
     * {@inheritDoc}
     */
    public function addScope(\Oro\Bundle\ScopeBundle\Entity\Scope $scope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addScope', [$scope]);

        return parent::addScope($scope);
    }

    /**
     * {@inheritDoc}
     */
    public function removeScope(\Oro\Bundle\ScopeBundle\Entity\Scope $scope)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeScope', [$scope]);

        return parent::removeScope($scope);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefault($default)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefault', [$default]);

        return parent::setDefault($default);
    }

    /**
     * {@inheritDoc}
     */
    public function isDefault()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDefault', []);

        return parent::isDefault();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setProductPageProduct($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductPageProduct', [$value]);

        return parent::setProductPageProduct($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setProductCollectionSegment($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductCollectionSegment', [$value]);

        return parent::setProductCollectionSegment($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setExcludeSubcategories($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcludeSubcategories', [$value]);

        return parent::setExcludeSubcategories($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setCmsPage($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCmsPage', [$value]);

        return parent::setCmsPage($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryPageCategory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryPageCategory', [$value]);

        return parent::setCategoryPageCategory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductPageProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductPageProduct', []);

        return parent::getProductPageProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductCollectionSegment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductCollectionSegment', []);

        return parent::getProductCollectionSegment();
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludeSubcategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludeSubcategories', []);

        return parent::getExcludeSubcategories();
    }

    /**
     * {@inheritDoc}
     */
    public function getCmsPage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCmsPage', []);

        return parent::getCmsPage();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryPageCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryPageCategory', []);

        return parent::getCategoryPageCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugs', []);

        return parent::getSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlug', [$slug]);

        return parent::addSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlug', [$slug]);

        return parent::removeSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function resetSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetSlugs', []);

        return parent::resetSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function hasSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSlug', [$slug]);

        return parent::hasSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseSlug', []);

        return parent::getBaseSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugByLocalization(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugByLocalization', [$localization]);

        return parent::getSlugByLocalization($localization);
    }

}
