<?php

namespace Proxies\__CG__\Oro\Bundle\MailChimpBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SubscribersList extends \Oro\Bundle\MailChimpBundle\Entity\SubscribersList implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'originId', 'channel', 'owner', 'webId', 'name', 'emailTypeOption', 'useAwesomeBar', 'defaultFromName', 'defaultFromEmail', 'defaultSubject', 'defaultLanguage', 'listRating', 'subscribeUrlShort', 'subscribeUrlLong', 'beamerAddress', 'visibility', 'memberCount', 'unsubscribeCount', 'cleanedCount', 'memberCountSinceSend', 'unsubscribeCountSinceSend', 'cleanedCountSinceSend', 'campaignCount', 'groupingCount', 'groupCount', 'mergeVarCount', 'avgSubRate', 'avgUsubRate', 'targetSubRate', 'openRate', 'clickRate', 'mergeVarFields', 'mergeVarConfig', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'id', 'originId', 'channel', 'owner', 'webId', 'name', 'emailTypeOption', 'useAwesomeBar', 'defaultFromName', 'defaultFromEmail', 'defaultSubject', 'defaultLanguage', 'listRating', 'subscribeUrlShort', 'subscribeUrlLong', 'beamerAddress', 'visibility', 'memberCount', 'unsubscribeCount', 'cleanedCount', 'memberCountSinceSend', 'unsubscribeCountSinceSend', 'cleanedCountSinceSend', 'campaignCount', 'groupingCount', 'groupCount', 'mergeVarCount', 'avgSubRate', 'avgUsubRate', 'targetSubRate', 'openRate', 'clickRate', 'mergeVarFields', 'mergeVarConfig', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SubscribersList $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginId', []);

        return parent::getOriginId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginId($originId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginId', [$originId]);

        return parent::setOriginId($originId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel($channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$channel]);

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebId', []);

        return parent::getWebId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebId($webId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebId', [$webId]);

        return parent::setWebId($webId);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function isEmailTypeOption()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEmailTypeOption', []);

        return parent::isEmailTypeOption();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailTypeOption($emailTypeOption)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailTypeOption', [$emailTypeOption]);

        return parent::setEmailTypeOption($emailTypeOption);
    }

    /**
     * {@inheritDoc}
     */
    public function isUseAwesomeBar()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUseAwesomeBar', []);

        return parent::isUseAwesomeBar();
    }

    /**
     * {@inheritDoc}
     */
    public function setUseAwesomeBar($useAwesomeBar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUseAwesomeBar', [$useAwesomeBar]);

        return parent::setUseAwesomeBar($useAwesomeBar);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultFromName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultFromName', []);

        return parent::getDefaultFromName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultFromName($defaultFromName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultFromName', [$defaultFromName]);

        return parent::setDefaultFromName($defaultFromName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultFromEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultFromEmail', []);

        return parent::getDefaultFromEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultFromEmail($defaultFromEmail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultFromEmail', [$defaultFromEmail]);

        return parent::setDefaultFromEmail($defaultFromEmail);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultSubject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultSubject', []);

        return parent::getDefaultSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSubject($defaultSubject)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSubject', [$defaultSubject]);

        return parent::setDefaultSubject($defaultSubject);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLanguage', []);

        return parent::getDefaultLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLanguage($defaultLanguage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLanguage', [$defaultLanguage]);

        return parent::setDefaultLanguage($defaultLanguage);
    }

    /**
     * {@inheritDoc}
     */
    public function getListRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListRating', []);

        return parent::getListRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setListRating($listRating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setListRating', [$listRating]);

        return parent::setListRating($listRating);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribeUrlShort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribeUrlShort', []);

        return parent::getSubscribeUrlShort();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribeUrlShort($subscribeUrlShort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribeUrlShort', [$subscribeUrlShort]);

        return parent::setSubscribeUrlShort($subscribeUrlShort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribeUrlLong()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribeUrlLong', []);

        return parent::getSubscribeUrlLong();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribeUrlLong($subscribeUrlLong)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribeUrlLong', [$subscribeUrlLong]);

        return parent::setSubscribeUrlLong($subscribeUrlLong);
    }

    /**
     * {@inheritDoc}
     */
    public function getBeamerAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBeamerAddress', []);

        return parent::getBeamerAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setBeamerAddress($beamerAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBeamerAddress', [$beamerAddress]);

        return parent::setBeamerAddress($beamerAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibility', []);

        return parent::getVisibility();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisibility($visibility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisibility', [$visibility]);

        return parent::setVisibility($visibility);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberCount', []);

        return parent::getMemberCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberCount($memberCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberCount', [$memberCount]);

        return parent::setMemberCount($memberCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribeCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribeCount', []);

        return parent::getUnsubscribeCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribeCount($unsubscribeCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribeCount', [$unsubscribeCount]);

        return parent::setUnsubscribeCount($unsubscribeCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCleanedCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCleanedCount', []);

        return parent::getCleanedCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCleanedCount($cleanedCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCleanedCount', [$cleanedCount]);

        return parent::setCleanedCount($cleanedCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberCountSinceSend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberCountSinceSend', []);

        return parent::getMemberCountSinceSend();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberCountSinceSend($memberCountSinceSend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberCountSinceSend', [$memberCountSinceSend]);

        return parent::setMemberCountSinceSend($memberCountSinceSend);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnsubscribeCountSinceSend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnsubscribeCountSinceSend', []);

        return parent::getUnsubscribeCountSinceSend();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnsubscribeCountSinceSend($unsubscribeCountSinceSend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnsubscribeCountSinceSend', [$unsubscribeCountSinceSend]);

        return parent::setUnsubscribeCountSinceSend($unsubscribeCountSinceSend);
    }

    /**
     * {@inheritDoc}
     */
    public function getCleanedCountSinceSend()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCleanedCountSinceSend', []);

        return parent::getCleanedCountSinceSend();
    }

    /**
     * {@inheritDoc}
     */
    public function setCleanedCountSinceSend($cleanedCountSinceSend)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCleanedCountSinceSend', [$cleanedCountSinceSend]);

        return parent::setCleanedCountSinceSend($cleanedCountSinceSend);
    }

    /**
     * {@inheritDoc}
     */
    public function getCampaignCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCampaignCount', []);

        return parent::getCampaignCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setCampaignCount($campaignCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCampaignCount', [$campaignCount]);

        return parent::setCampaignCount($campaignCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupingCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupingCount', []);

        return parent::getGroupingCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupingCount($groupingCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupingCount', [$groupingCount]);

        return parent::setGroupingCount($groupingCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupCount', []);

        return parent::getGroupCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupCount($groupCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupCount', [$groupCount]);

        return parent::setGroupCount($groupCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getMergeVarCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMergeVarCount', []);

        return parent::getMergeVarCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setMergeVarCount($mergeVarCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMergeVarCount', [$mergeVarCount]);

        return parent::setMergeVarCount($mergeVarCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvgSubRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvgSubRate', []);

        return parent::getAvgSubRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvgSubRate($avgSubRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvgSubRate', [$avgSubRate]);

        return parent::setAvgSubRate($avgSubRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvgUsubRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvgUsubRate', []);

        return parent::getAvgUsubRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvgUsubRate($avgUsubRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvgUsubRate', [$avgUsubRate]);

        return parent::setAvgUsubRate($avgUsubRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getTargetSubRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTargetSubRate', []);

        return parent::getTargetSubRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTargetSubRate($targetSubRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTargetSubRate', [$targetSubRate]);

        return parent::setTargetSubRate($targetSubRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOpenRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpenRate', []);

        return parent::getOpenRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpenRate($openRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpenRate', [$openRate]);

        return parent::setOpenRate($openRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getClickRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClickRate', []);

        return parent::getClickRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setClickRate($clickRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClickRate', [$clickRate]);

        return parent::setClickRate($clickRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getMergeVarFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMergeVarFields', []);

        return parent::getMergeVarFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setMergeVarFields(\Oro\Bundle\MailChimpBundle\Model\MergeVar\MergeVarFieldsInterface $mergeVarFields = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMergeVarFields', [$mergeVarFields]);

        return parent::setMergeVarFields($mergeVarFields);
    }

    /**
     * {@inheritDoc}
     */
    public function getMergeVarConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMergeVarConfig', []);

        return parent::getMergeVarConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function setMergeVarConfig(array $data = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMergeVarConfig', [$data]);

        return parent::setMergeVarConfig($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

}
