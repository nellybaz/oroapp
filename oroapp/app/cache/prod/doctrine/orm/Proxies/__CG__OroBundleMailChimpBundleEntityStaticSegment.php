<?php

namespace Proxies\__CG__\Oro\Bundle\MailChimpBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StaticSegment extends \Oro\Bundle\MailChimpBundle\Entity\StaticSegment implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'originId', 'channel', 'marketingList', 'subscribersList', 'segmentMembers', 'extendedMergeVars', 'owner', 'syncStatus', 'lastSynced', 'remoteRemove', 'createdAt', 'updatedAt', 'lastReset', 'memberCount'];
        }

        return ['__isInitialized__', 'id', 'name', 'originId', 'channel', 'marketingList', 'subscribersList', 'segmentMembers', 'extendedMergeVars', 'owner', 'syncStatus', 'lastSynced', 'remoteRemove', 'createdAt', 'updatedAt', 'lastReset', 'memberCount'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StaticSegment $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncStatus($syncStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncStatus', [$syncStatus]);

        return parent::setSyncStatus($syncStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncStatus', []);

        return parent::getSyncStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastSynced($lastSynced)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastSynced', [$lastSynced]);

        return parent::setLastSynced($lastSynced);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastSynced()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastSynced', []);

        return parent::getLastSynced();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoteRemove($remoteRemove)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoteRemove', [$remoteRemove]);

        return parent::setRemoteRemove($remoteRemove);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteRemove', []);

        return parent::getRemoteRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginId', []);

        return parent::getOriginId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginId($originId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginId', [$originId]);

        return parent::setOriginId($originId);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel($channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$channel]);

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function setMarketingList(\Oro\Bundle\MarketingListBundle\Entity\MarketingList $marketingList = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMarketingList', [$marketingList]);

        return parent::setMarketingList($marketingList);
    }

    /**
     * {@inheritDoc}
     */
    public function getMarketingList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMarketingList', []);

        return parent::getMarketingList();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubscribersList(\Oro\Bundle\MailChimpBundle\Entity\SubscribersList $subscribersList = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubscribersList', [$subscribersList]);

        return parent::setSubscribersList($subscribersList);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscribersList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscribersList', []);

        return parent::getSubscribersList();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastReset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastReset', []);

        return parent::getLastReset();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastReset(\DateTime $lastReset = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastReset', [$lastReset]);

        return parent::setLastReset($lastReset);
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberCount($memberCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberCount', [$memberCount]);

        return parent::setMemberCount($memberCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberCount', []);

        return parent::getMemberCount();
    }

    /**
     * {@inheritDoc}
     */
    public function addSegmentMember(\Oro\Bundle\MailChimpBundle\Entity\StaticSegmentMember $segmentMembers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSegmentMember', [$segmentMembers]);

        return parent::addSegmentMember($segmentMembers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSegmentMember(\Oro\Bundle\MailChimpBundle\Entity\StaticSegmentMember $segmentMembers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSegmentMember', [$segmentMembers]);

        return parent::removeSegmentMember($segmentMembers);
    }

    /**
     * {@inheritDoc}
     */
    public function getSegmentMembers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSegmentMembers', []);

        return parent::getSegmentMembers();
    }

    /**
     * {@inheritDoc}
     */
    public function setSegmentMembers(\Doctrine\Common\Collections\Collection $segmentMembers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSegmentMembers', [$segmentMembers]);

        return parent::setSegmentMembers($segmentMembers);
    }

    /**
     * {@inheritDoc}
     */
    public function addExtendedMergeVar(\Oro\Bundle\MailChimpBundle\Entity\ExtendedMergeVar $extendedMergeVar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExtendedMergeVar', [$extendedMergeVar]);

        return parent::addExtendedMergeVar($extendedMergeVar);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExtendedMergeVar(\Oro\Bundle\MailChimpBundle\Entity\ExtendedMergeVar $extendedMergeVar)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExtendedMergeVar', [$extendedMergeVar]);

        return parent::removeExtendedMergeVar($extendedMergeVar);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtendedMergeVars(array $filterByStates = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtendedMergeVars', [$filterByStates]);

        return parent::getExtendedMergeVars($filterByStates);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncedExtendedMergeVars()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncedExtendedMergeVars', []);

        return parent::getSyncedExtendedMergeVars();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncedExtendedMergeVars(\Doctrine\Common\Collections\Collection $collection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncedExtendedMergeVars', [$collection]);

        return parent::setSyncedExtendedMergeVars($collection);
    }

}
