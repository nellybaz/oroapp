<?php

namespace Proxies\__CG__\Oro\Bundle\WorkflowBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProcessDefinition extends \Oro\Bundle\WorkflowBundle\Entity\ProcessDefinition implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'name', 'label', 'enabled', 'relatedEntity', 'executionOrder', 'excludeDefinitions', 'preConditionsConfiguration', 'actionsConfiguration', 'createdAt', 'updatedAt'];
        }

        return ['__isInitialized__', 'name', 'label', 'enabled', 'relatedEntity', 'executionOrder', 'excludeDefinitions', 'preConditionsConfiguration', 'actionsConfiguration', 'createdAt', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProcessDefinition $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getName();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', [$label]);

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', []);

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelatedEntity($relatedEntity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelatedEntity', [$relatedEntity]);

        return parent::setRelatedEntity($relatedEntity);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelatedEntity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelatedEntity', []);

        return parent::getRelatedEntity();
    }

    /**
     * {@inheritDoc}
     */
    public function setExecutionOrder($executionOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExecutionOrder', [$executionOrder]);

        return parent::setExecutionOrder($executionOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getExecutionOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExecutionOrder', []);

        return parent::getExecutionOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setExcludeDefinitions(array $excludeDefinitions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcludeDefinitions', [$excludeDefinitions]);

        return parent::setExcludeDefinitions($excludeDefinitions);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludeDefinitions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludeDefinitions', []);

        return parent::getExcludeDefinitions();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreConditionsConfiguration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreConditionsConfiguration', []);

        return parent::getPreConditionsConfiguration();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreConditionsConfiguration($configuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreConditionsConfiguration', [$configuration]);

        return parent::setPreConditionsConfiguration($configuration);
    }

    /**
     * {@inheritDoc}
     */
    public function setActionsConfiguration($configuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActionsConfiguration', [$configuration]);

        return parent::setActionsConfiguration($configuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getActionsConfiguration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActionsConfiguration', []);

        return parent::getActionsConfiguration();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function import(\Oro\Bundle\WorkflowBundle\Entity\ProcessDefinition $definition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'import', [$definition]);

        return parent::import($definition);
    }

    /**
     * {@inheritDoc}
     */
    public function getObjectIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getObjectIdentifier', []);

        return parent::getObjectIdentifier();
    }

}
