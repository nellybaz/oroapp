<?php

namespace Proxies\__CG__\Oro\Bundle\ZendeskBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Oro\Bundle\ZendeskBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'originId', 'url', 'externalId', 'name', 'details', 'ticketRestriction', 'onlyPrivateComments', 'notes', 'verified', 'active', 'alias', 'role', 'email', 'phone', 'timeZone', 'locale', 'lastLoginAt', 'createdAt', 'updatedAt', 'originCreatedAt', 'originUpdatedAt', 'relatedContact', 'relatedUser', 'channel', '' . "\0" . 'Oro\\Bundle\\ZendeskBundle\\Entity\\User' . "\0" . 'updatedAtLocked'];
        }

        return ['__isInitialized__', 'id', 'originId', 'url', 'externalId', 'name', 'details', 'ticketRestriction', 'onlyPrivateComments', 'notes', 'verified', 'active', 'alias', 'role', 'email', 'phone', 'timeZone', 'locale', 'lastLoginAt', 'createdAt', 'updatedAt', 'originCreatedAt', 'originUpdatedAt', 'relatedContact', 'relatedUser', 'channel', '' . "\0" . 'Oro\\Bundle\\ZendeskBundle\\Entity\\User' . "\0" . 'updatedAtLocked'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginId', []);

        return parent::getOriginId();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginId($originId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginId', [$originId]);

        return parent::setOriginId($originId);
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalId($externalId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalId', [$externalId]);

        return parent::setExternalId($externalId);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalId', []);

        return parent::getExternalId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetails($details)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetails', [$details]);

        return parent::setDetails($details);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setTicketRestriction($ticketRestriction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTicketRestriction', [$ticketRestriction]);

        return parent::setTicketRestriction($ticketRestriction);
    }

    /**
     * {@inheritDoc}
     */
    public function getTicketRestriction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTicketRestriction', []);

        return parent::getTicketRestriction();
    }

    /**
     * {@inheritDoc}
     */
    public function setOnlyPrivateComments($onlyPrivateComments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOnlyPrivateComments', [$onlyPrivateComments]);

        return parent::setOnlyPrivateComments($onlyPrivateComments);
    }

    /**
     * {@inheritDoc}
     */
    public function getOnlyPrivateComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOnlyPrivateComments', []);

        return parent::getOnlyPrivateComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerified($verified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerified', [$verified]);

        return parent::setVerified($verified);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerified', []);

        return parent::getVerified();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlias($alias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlias', [$alias]);

        return parent::setAlias($alias);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlias', []);

        return parent::getAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole(\Oro\Bundle\ZendeskBundle\Entity\UserRole $role = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function isRoleIn(array $roles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRoleIn', [$roles]);

        return parent::isRoleIn($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function isRoleEqual($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRoleEqual', [$role]);

        return parent::isRoleEqual($role);
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeZone($timeZone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeZone', [$timeZone]);

        return parent::setTimeZone($timeZone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeZone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeZone', []);

        return parent::getTimeZone();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', [$locale]);

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', []);

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastLoginAt(\DateTime $lastLoginAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastLoginAt', [$lastLoginAt]);

        return parent::setLastLoginAt($lastLoginAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastLoginAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastLoginAt', []);

        return parent::getLastLoginAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginCreatedAt(\DateTime $originCreatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginCreatedAt', [$originCreatedAt]);

        return parent::setOriginCreatedAt($originCreatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginCreatedAt', []);

        return parent::getOriginCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginUpdatedAt(\DateTime $originUpdatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginUpdatedAt', [$originUpdatedAt]);

        return parent::setOriginUpdatedAt($originUpdatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginUpdatedAt', []);

        return parent::getOriginUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelatedContact(\Oro\Bundle\ContactBundle\Entity\Contact $contact = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelatedContact', [$contact]);

        return parent::setRelatedContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelatedContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelatedContact', []);

        return parent::getRelatedContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setRelatedUser(\Oro\Bundle\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRelatedUser', [$user]);

        return parent::setRelatedUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getRelatedUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRelatedUser', []);

        return parent::getRelatedUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel(\Oro\Bundle\IntegrationBundle\Entity\Channel $integration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$integration]);

        return parent::setChannel($integration);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

    /**
     * {@inheritDoc}
     */
    public function getChannelName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannelName', []);

        return parent::getChannelName();
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

}
