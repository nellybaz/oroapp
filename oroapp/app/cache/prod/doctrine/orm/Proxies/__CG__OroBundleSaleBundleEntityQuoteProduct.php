<?php

namespace Proxies\__CG__\Oro\Bundle\SaleBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class QuoteProduct extends \Oro\Bundle\SaleBundle\Entity\QuoteProduct implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'quote', 'product', 'freeFormProduct', 'productSku', 'productReplacement', 'freeFormProductReplacement', 'productReplacementSku', 'type', 'comment', 'commentCustomer', 'quoteProductOffers', 'quoteProductRequests'];
        }

        return ['__isInitialized__', 'id', 'quote', 'product', 'freeFormProduct', 'productSku', 'productReplacement', 'freeFormProductReplacement', 'productReplacementSku', 'type', 'comment', 'commentCustomer', 'quoteProductOffers', 'quoteProductRequests'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (QuoteProduct $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function updateProducts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateProducts', []);

        return parent::updateProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityIdentifier', []);

        return parent::getEntityIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function isTypeOffer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTypeOffer', []);

        return parent::isTypeOffer();
    }

    /**
     * {@inheritDoc}
     */
    public function isTypeRequested()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTypeRequested', []);

        return parent::isTypeRequested();
    }

    /**
     * {@inheritDoc}
     */
    public function isTypeNotAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTypeNotAvailable', []);

        return parent::isTypeNotAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function isProductFreeForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProductFreeForm', []);

        return parent::isProductFreeForm();
    }

    /**
     * {@inheritDoc}
     */
    public function isProductReplacementFreeForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isProductReplacementFreeForm', []);

        return parent::isProductReplacementFreeForm();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductName', []);

        return parent::getProductName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuote(\Oro\Bundle\SaleBundle\Entity\Quote $quote = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuote', [$quote]);

        return parent::setQuote($quote);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuote()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuote', []);

        return parent::getQuote();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduct(\Oro\Bundle\ProductBundle\Entity\Product $product = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduct', []);

        return parent::getProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreeFormProduct($freeFormProduct)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreeFormProduct', [$freeFormProduct]);

        return parent::setFreeFormProduct($freeFormProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreeFormProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreeFormProduct', []);

        return parent::getFreeFormProduct();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductSku($productSku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductSku', [$productSku]);

        return parent::setProductSku($productSku);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductSku', []);

        return parent::getProductSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductReplacement(\Oro\Bundle\ProductBundle\Entity\Product $productReplacement = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductReplacement', [$productReplacement]);

        return parent::setProductReplacement($productReplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductReplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductReplacement', []);

        return parent::getProductReplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreeFormProductReplacement($freeFormProductReplacement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreeFormProductReplacement', [$freeFormProductReplacement]);

        return parent::setFreeFormProductReplacement($freeFormProductReplacement);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreeFormProductReplacement()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreeFormProductReplacement', []);

        return parent::getFreeFormProductReplacement();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductReplacementSku($productReplacementSku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductReplacementSku', [$productReplacementSku]);

        return parent::setProductReplacementSku($productReplacementSku);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductReplacementSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductReplacementSku', []);

        return parent::getProductReplacementSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommentCustomer($commentCustomer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommentCustomer', [$commentCustomer]);

        return parent::setCommentCustomer($commentCustomer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCommentCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommentCustomer', []);

        return parent::getCommentCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function addQuoteProductOffer(\Oro\Bundle\SaleBundle\Entity\QuoteProductOffer $quoteProductOffer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuoteProductOffer', [$quoteProductOffer]);

        return parent::addQuoteProductOffer($quoteProductOffer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeQuoteProductOffer(\Oro\Bundle\SaleBundle\Entity\QuoteProductOffer $quoteProductOffer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeQuoteProductOffer', [$quoteProductOffer]);

        return parent::removeQuoteProductOffer($quoteProductOffer);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuoteProductOffers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuoteProductOffers', []);

        return parent::getQuoteProductOffers();
    }

    /**
     * {@inheritDoc}
     */
    public function hasQuoteProductOfferByPriceType($priceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasQuoteProductOfferByPriceType', [$priceType]);

        return parent::hasQuoteProductOfferByPriceType($priceType);
    }

    /**
     * {@inheritDoc}
     */
    public function addQuoteProductRequest(\Oro\Bundle\SaleBundle\Entity\QuoteProductRequest $quoteProductRequest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuoteProductRequest', [$quoteProductRequest]);

        return parent::addQuoteProductRequest($quoteProductRequest);
    }

    /**
     * {@inheritDoc}
     */
    public function removeQuoteProductRequest(\Oro\Bundle\SaleBundle\Entity\QuoteProductRequest $quoteProductRequest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeQuoteProductRequest', [$quoteProductRequest]);

        return parent::removeQuoteProductRequest($quoteProductRequest);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuoteProductRequests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuoteProductRequests', []);

        return parent::getQuoteProductRequests();
    }

    /**
     * {@inheritDoc}
     */
    public function hasOfferVariants()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasOfferVariants', []);

        return parent::hasOfferVariants();
    }

    /**
     * {@inheritDoc}
     */
    public function hasIncrementalOffers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasIncrementalOffers', []);

        return parent::hasIncrementalOffers();
    }

    /**
     * {@inheritDoc}
     */
    public function getParentProduct()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentProduct', []);

        return parent::getParentProduct();
    }

}
