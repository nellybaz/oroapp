<?php

namespace Proxies\__CG__\Oro\Bundle\EntityConfigBundle\Attribute\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class AttributeFamily extends \Oro\Bundle\EntityConfigBundle\Attribute\Entity\AttributeFamily implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'id', 'labels', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'code', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'entityClass', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'attributeGroups', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'isEnabled', 'owner', 'organization', 'serialized_data', 'image', 'createdAt', 'updatedAt', 'updatedAtSet'];
        }

        return ['__isInitialized__', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'id', 'labels', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'code', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'entityClass', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'attributeGroups', '' . "\0" . 'Oro\\Bundle\\EntityConfigBundle\\Attribute\\Entity\\AttributeFamily' . "\0" . 'isEnabled', 'owner', 'organization', 'serialized_data', 'image', 'createdAt', 'updatedAt', 'updatedAtSet'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (AttributeFamily $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function addLabel(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLabel', [$label]);

        return parent::addLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLabel(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLabel', [$label]);

        return parent::removeLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabels()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabels', []);

        return parent::getLabels();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner(\Oro\Bundle\UserBundle\Entity\User $owner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owner]);

        return parent::setOwner($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnabled', []);

        return parent::getIsEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityClass', []);

        return parent::getEntityClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntityClass($entityClass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntityClass', [$entityClass]);

        return parent::setEntityClass($entityClass);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeGroups', []);

        return parent::getAttributeGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeGroups(\Doctrine\Common\Collections\Collection $attributeGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeGroups', [$attributeGroups]);

        return parent::setAttributeGroups($attributeGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeGroup($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeGroup', [$code]);

        return parent::getAttributeGroup($code);
    }

    /**
     * {@inheritDoc}
     */
    public function addAttributeGroup(\Oro\Bundle\EntityConfigBundle\Attribute\Entity\AttributeGroup $attributeGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAttributeGroup', [$attributeGroup]);

        return parent::addAttributeGroup($attributeGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAttributeGroup(\Oro\Bundle\EntityConfigBundle\Attribute\Entity\AttributeGroup $attributeGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAttributeGroup', [$attributeGroup]);

        return parent::removeAttributeGroup($attributeGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toString', []);

        return parent::toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHash', []);

        return parent::getHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$value]);

        return parent::setImage($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLabel($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLabel', [$value]);

        return parent::setDefaultLabel($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', [$localization]);

        return parent::getLabel($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLabel', []);

        return parent::getDefaultLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

}
