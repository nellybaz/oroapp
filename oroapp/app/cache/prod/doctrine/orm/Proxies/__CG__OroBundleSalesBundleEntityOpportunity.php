<?php

namespace Proxies\__CG__\Oro\Bundle\SalesBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Opportunity extends \Oro\Bundle\SalesBundle\Entity\Opportunity implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'closeReason', 'contact', 'lead', 'owner', 'name', 'closeDate', 'probability', 'budgetAmount', 'budgetAmountCurrency', 'budgetAmountValue', 'baseBudgetAmountValue', 'closeRevenue', 'closeRevenueCurrency', 'closeRevenueValue', 'baseCloseRevenueValue', 'customerNeed', 'proposedSolution', 'createdAt', 'updatedAt', 'notes', 'organization', 'closedAt', 'customerAssociation', 'status', 'serialized_data', 'ac_last_contact_date_out', 'ac_last_contact_date_in', 'ac_last_contact_date', 'ac_contact_count_out', 'ac_contact_count_in', 'ac_contact_count'];
        }

        return ['__isInitialized__', 'id', 'closeReason', 'contact', 'lead', 'owner', 'name', 'closeDate', 'probability', 'budgetAmount', 'budgetAmountCurrency', 'budgetAmountValue', 'baseBudgetAmountValue', 'closeRevenue', 'closeRevenueCurrency', 'closeRevenueValue', 'baseCloseRevenueValue', 'customerNeed', 'proposedSolution', 'createdAt', 'updatedAt', 'notes', 'organization', 'closedAt', 'customerAssociation', 'status', 'serialized_data', 'ac_last_contact_date_out', 'ac_last_contact_date_in', 'ac_last_contact_date', 'ac_contact_count_out', 'ac_contact_count_in', 'ac_contact_count'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Opportunity $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function loadMultiCurrencyFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'loadMultiCurrencyFields', []);

        return parent::loadMultiCurrencyFields();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLead($lead)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLead', [$lead]);

        return parent::setLead($lead);
    }

    /**
     * {@inheritDoc}
     */
    public function getLead()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLead', []);

        return parent::getLead();
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetAmount', []);

        return parent::getBudgetAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetAmount(\Oro\Bundle\CurrencyBundle\Entity\MultiCurrency $budgetAmount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetAmount', [$budgetAmount]);

        return parent::setBudgetAmount($budgetAmount);
    }

    /**
     * {@inheritDoc}
     */
    public function updateMultiCurrencyFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateMultiCurrencyFields', []);

        return parent::updateMultiCurrencyFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseBudgetAmountValue($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseBudgetAmountValue', [$value]);

        return parent::setBaseBudgetAmountValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseBudgetAmountValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseBudgetAmountValue', []);

        return parent::getBaseBudgetAmountValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setBaseCloseRevenueValue($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBaseCloseRevenueValue', [$value]);

        return parent::setBaseCloseRevenueValue($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseCloseRevenueValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseCloseRevenueValue', []);

        return parent::getBaseCloseRevenueValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetAmountCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetAmountCurrency', [$currency]);

        return parent::setBudgetAmountCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function setBudgetAmountValue($budgetAmountValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudgetAmountValue', [$budgetAmountValue]);

        return parent::setBudgetAmountValue($budgetAmountValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetAmountCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetAmountCurrency', []);

        return parent::getBudgetAmountCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function getBudgetAmountValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudgetAmountValue', []);

        return parent::getBudgetAmountValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCloseRevenueCurrency($currency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloseRevenueCurrency', [$currency]);

        return parent::setCloseRevenueCurrency($currency);
    }

    /**
     * {@inheritDoc}
     */
    public function setCloseRevenueValue($closeRevenueValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloseRevenueValue', [$closeRevenueValue]);

        return parent::setCloseRevenueValue($closeRevenueValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getCloseRevenueCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloseRevenueCurrency', []);

        return parent::getCloseRevenueCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function getCloseRevenueValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloseRevenueValue', []);

        return parent::getCloseRevenueValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setCloseDate($closeDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloseDate', [$closeDate]);

        return parent::setCloseDate($closeDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCloseDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloseDate', []);

        return parent::getCloseDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerNeed($customerNeed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerNeed', [$customerNeed]);

        return parent::setCustomerNeed($customerNeed);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerNeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerNeed', []);

        return parent::getCustomerNeed();
    }

    /**
     * {@inheritDoc}
     */
    public function setProbability($probability)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProbability', [$probability]);

        return parent::setProbability($probability);
    }

    /**
     * {@inheritDoc}
     */
    public function getProbability()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProbability', []);

        return parent::getProbability();
    }

    /**
     * {@inheritDoc}
     */
    public function setProposedSolution($proposedSolution)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProposedSolution', [$proposedSolution]);

        return parent::setProposedSolution($proposedSolution);
    }

    /**
     * {@inheritDoc}
     */
    public function getProposedSolution()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProposedSolution', []);

        return parent::getProposedSolution();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCloseReason($closeReason)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloseReason', [$closeReason]);

        return parent::setCloseReason($closeReason);
    }

    /**
     * {@inheritDoc}
     */
    public function getCloseReason()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloseReason', []);

        return parent::getCloseReason();
    }

    /**
     * {@inheritDoc}
     */
    public function setCloseRevenue(\Oro\Bundle\CurrencyBundle\Entity\MultiCurrency $closeRevenue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCloseRevenue', [$closeRevenue]);

        return parent::setCloseRevenue($closeRevenue);
    }

    /**
     * {@inheritDoc}
     */
    public function getCloseRevenue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCloseRevenue', []);

        return parent::getCloseRevenue();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$created]);

        return parent::setCreatedAt($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updated]);

        return parent::setUpdatedAt($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function beforeSave()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeSave', []);

        return parent::beforeSave();
    }

    /**
     * {@inheritDoc}
     */
    public function beforeUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'beforeUpdate', []);

        return parent::beforeUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owningUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owningUser]);

        return parent::setOwner($owningUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\Organization $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function setClosedAt(\DateTime $closedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClosedAt', [$closedAt]);

        return parent::setClosedAt($closedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getClosedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClosedAt', []);

        return parent::getClosedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomerAssociation(\Oro\Bundle\SalesBundle\Entity\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomerAssociation', [$customer]);

        return parent::setCustomerAssociation($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomerAssociation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomerAssociation', []);

        return parent::getCustomerAssociation();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$value]);

        return parent::setStatus($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDateOut($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDateOut', [$value]);

        return parent::setAcLastContactDateOut($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDateIn($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDateIn', [$value]);

        return parent::setAcLastContactDateIn($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcLastContactDate($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcLastContactDate', [$value]);

        return parent::setAcLastContactDate($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCountOut($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCountOut', [$value]);

        return parent::setAcContactCountOut($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCountIn($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCountIn', [$value]);

        return parent::setAcContactCountIn($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAcContactCount($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcContactCount', [$value]);

        return parent::setAcContactCount($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDateOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDateOut', []);

        return parent::getAcLastContactDateOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDateIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDateIn', []);

        return parent::getAcLastContactDateIn();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcLastContactDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcLastContactDate', []);

        return parent::getAcLastContactDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCountOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCountOut', []);

        return parent::getAcContactCountOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCountIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCountIn', []);

        return parent::getAcContactCountIn();
    }

    /**
     * {@inheritDoc}
     */
    public function getAcContactCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAcContactCount', []);

        return parent::getAcContactCount();
    }

}
