<?php

namespace Proxies\__CG__\Oro\Bundle\ProductBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Product extends \Oro\Bundle\ProductBundle\Entity\Product implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'sku', 'skuUppercase', 'status', 'variantFields', 'createdAt', 'updatedAt', 'updatedAtSet', 'owner', 'organization', 'unitPrecisions', 'primaryUnitPrecision', 'names', 'descriptions', 'variantLinks', 'parentVariantLinks', 'shortDescriptions', 'images', 'type', 'attributeFamily', 'featured', 'newArrival', 'brand', 'denormalizedDefaultName', 'denormalizedDefaultNameUppercase', 'taxCode', 'serialized_data', 'pageTemplate', 'minimumQuantityToOrder', 'metaTitles', 'metaKeywords', 'metaDescriptions', 'maximumQuantityToOrder', 'manageInventory', 'lowInventoryThreshold', 'isUpcoming', 'inventoryThreshold', 'inventory_status', 'highlightLowInventory', 'decrementQuantity', 'category', 'backOrder', 'availability_date', 'slugPrototypesWithRedirect', 'slugPrototypes', 'slugs'];
        }

        return ['__isInitialized__', 'id', 'sku', 'skuUppercase', 'status', 'variantFields', 'createdAt', 'updatedAt', 'updatedAtSet', 'owner', 'organization', 'unitPrecisions', 'primaryUnitPrecision', 'names', 'descriptions', 'variantLinks', 'parentVariantLinks', 'shortDescriptions', 'images', 'type', 'attributeFamily', 'featured', 'newArrival', 'brand', 'denormalizedDefaultName', 'denormalizedDefaultNameUppercase', 'taxCode', 'serialized_data', 'pageTemplate', 'minimumQuantityToOrder', 'metaTitles', 'metaKeywords', 'metaDescriptions', 'maximumQuantityToOrder', 'manageInventory', 'lowInventoryThreshold', 'isUpcoming', 'inventoryThreshold', 'inventory_status', 'highlightLowInventory', 'decrementQuantity', 'category', 'backOrder', 'availability_date', 'slugPrototypesWithRedirect', 'slugPrototypes', 'slugs'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Product $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function isEnabled(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSku()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSku', []);

        return parent::getSku();
    }

    /**
     * {@inheritDoc}
     */
    public function setSku($sku)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSku', [$sku]);

        return parent::setSku($sku);
    }

    /**
     * {@inheritDoc}
     */
    public function isSimple()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSimple', []);

        return parent::isSimple();
    }

    /**
     * {@inheritDoc}
     */
    public function isConfigurable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isConfigurable', []);

        return parent::isConfigurable();
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantFields', []);

        return parent::getVariantFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setVariantFields($variantFields)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVariantFields', [$variantFields]);

        return parent::setVariantFields($variantFields);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt(\DateTime $createdAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTime $updatedAt = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function isUpdatedAtSet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isUpdatedAtSet', []);

        return parent::isUpdatedAtSet();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwner($owningBusinessUnit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwner', [$owningBusinessUnit]);

        return parent::setOwner($owningBusinessUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganization(\Oro\Bundle\OrganizationBundle\Entity\OrganizationInterface $organization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganization', [$organization]);

        return parent::setOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

    /**
     * {@inheritDoc}
     */
    public function addUnitPrecision(\Oro\Bundle\ProductBundle\Entity\ProductUnitPrecision $unitPrecision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUnitPrecision', [$unitPrecision]);

        return parent::addUnitPrecision($unitPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUnitPrecision(\Oro\Bundle\ProductBundle\Entity\ProductUnitPrecision $unitPrecision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUnitPrecision', [$unitPrecision]);

        return parent::removeUnitPrecision($unitPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPrecisions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPrecisions', []);

        return parent::getUnitPrecisions();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnitPrecision($unitCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnitPrecision', [$unitCode]);

        return parent::getUnitPrecision($unitCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableUnitCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableUnitCodes', []);

        return parent::getAvailableUnitCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableUnits', []);

        return parent::getAvailableUnits();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableUnitsPrecision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableUnitsPrecision', []);

        return parent::getAvailableUnitsPrecision();
    }

    /**
     * {@inheritDoc}
     */
    public function setNames(array $names = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNames', [$names]);

        return parent::setNames($names);
    }

    /**
     * {@inheritDoc}
     */
    public function getNames()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNames', []);

        return parent::getNames();
    }

    /**
     * {@inheritDoc}
     */
    public function addName(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addName', [$name]);

        return parent::addName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function removeName(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeName', [$name]);

        return parent::removeName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescriptions', []);

        return parent::getDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDescription', [$description]);

        return parent::addDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDescription', [$description]);

        return parent::removeDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getVariantLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVariantLinks', []);

        return parent::getVariantLinks();
    }

    /**
     * {@inheritDoc}
     */
    public function addVariantLink(\Oro\Bundle\ProductBundle\Entity\ProductVariantLink $variantLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addVariantLink', [$variantLink]);

        return parent::addVariantLink($variantLink);
    }

    /**
     * {@inheritDoc}
     */
    public function removeVariantLink(\Oro\Bundle\ProductBundle\Entity\ProductVariantLink $variantLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeVariantLink', [$variantLink]);

        return parent::removeVariantLink($variantLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getParentVariantLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentVariantLinks', []);

        return parent::getParentVariantLinks();
    }

    /**
     * {@inheritDoc}
     */
    public function isVariant(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVariant', []);

        return parent::isVariant();
    }

    /**
     * {@inheritDoc}
     */
    public function addParentVariantLink(\Oro\Bundle\ProductBundle\Entity\ProductVariantLink $parentVariantLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addParentVariantLink', [$parentVariantLink]);

        return parent::addParentVariantLink($parentVariantLink);
    }

    /**
     * {@inheritDoc}
     */
    public function removeParentVariantLink(\Oro\Bundle\ProductBundle\Entity\ProductVariantLink $parentVariantLink)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeParentVariantLink', [$parentVariantLink]);

        return parent::removeParentVariantLink($parentVariantLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getImages()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImages', []);

        return parent::getImages();
    }

    /**
     * {@inheritDoc}
     */
    public function getImagesByType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImagesByType', [$type]);

        return parent::getImagesByType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function addImage(\Oro\Bundle\ProductBundle\Entity\ProductImage $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addImage', [$image]);

        return parent::addImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function removeImage(\Oro\Bundle\ProductBundle\Entity\ProductImage $image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeImage', [$image]);

        return parent::removeImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescriptions', []);

        return parent::getShortDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function addShortDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addShortDescription', [$shortDescription]);

        return parent::addShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function removeShortDescription(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeShortDescription', [$shortDescription]);

        return parent::removeShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function prePersist()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'prePersist', []);

        return parent::prePersist();
    }

    /**
     * {@inheritDoc}
     */
    public function preUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preUpdate', []);

        return parent::preUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrimaryUnitPrecision($primaryUnitPrecision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrimaryUnitPrecision', [$primaryUnitPrecision]);

        return parent::setPrimaryUnitPrecision($primaryUnitPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrimaryUnitPrecision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrimaryUnitPrecision', []);

        return parent::getPrimaryUnitPrecision();
    }

    /**
     * {@inheritDoc}
     */
    public function addAdditionalUnitPrecision(\Oro\Bundle\ProductBundle\Entity\ProductUnitPrecision $unitPrecision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAdditionalUnitPrecision', [$unitPrecision]);

        return parent::addAdditionalUnitPrecision($unitPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAdditionalUnitPrecision(\Oro\Bundle\ProductBundle\Entity\ProductUnitPrecision $unitPrecision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAdditionalUnitPrecision', [$unitPrecision]);

        return parent::removeAdditionalUnitPrecision($unitPrecision);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalUnitPrecisions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalUnitPrecisions', []);

        return parent::getAdditionalUnitPrecisions();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttributeFamily(\Oro\Bundle\EntityConfigBundle\Attribute\Entity\AttributeFamily $attributeFamily)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttributeFamily', [$attributeFamily]);

        return parent::setAttributeFamily($attributeFamily);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttributeFamily()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttributeFamily', []);

        return parent::getAttributeFamily();
    }

    /**
     * {@inheritDoc}
     */
    public function getFeatured()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeatured', []);

        return parent::getFeatured();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeatured($featured)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeatured', [$featured]);

        return parent::setFeatured($featured);
    }

    /**
     * {@inheritDoc}
     */
    public function isNewArrival()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNewArrival', []);

        return parent::isNewArrival();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewArrival($newArrival)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewArrival', [$newArrival]);

        return parent::setNewArrival($newArrival);
    }

    /**
     * {@inheritDoc}
     */
    public function getBrand()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBrand', []);

        return parent::getBrand();
    }

    /**
     * {@inheritDoc}
     */
    public function setBrand($brand)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBrand', [$brand]);

        return parent::setBrand($brand);
    }

    /**
     * {@inheritDoc}
     */
    public function getSkuUppercase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSkuUppercase', []);

        return parent::getSkuUppercase();
    }

    /**
     * {@inheritDoc}
     */
    public function getDenormalizedDefaultName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDenormalizedDefaultName', []);

        return parent::getDenormalizedDefaultName();
    }

    /**
     * {@inheritDoc}
     */
    public function getDenormalizedDefaultNameUppercase()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDenormalizedDefaultNameUppercase', []);

        return parent::getDenormalizedDefaultNameUppercase();
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCode($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCode', [$value]);

        return parent::setTaxCode($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerializedData($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerializedData', [$value]);

        return parent::setSerializedData($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setPageTemplate($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageTemplate', [$value]);

        return parent::setPageTemplate($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMinimumQuantityToOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinimumQuantityToOrder', [$value]);

        return parent::setMinimumQuantityToOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitles', [$value]);

        return parent::setMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaKeywords', [$value]);

        return parent::setMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescriptions', [$value]);

        return parent::setMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaximumQuantityToOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaximumQuantityToOrder', [$value]);

        return parent::setMaximumQuantityToOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setManageInventory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManageInventory', [$value]);

        return parent::setManageInventory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setLowInventoryThreshold($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLowInventoryThreshold', [$value]);

        return parent::setLowInventoryThreshold($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsUpcoming($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsUpcoming', [$value]);

        return parent::setIsUpcoming($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setInventoryThreshold($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInventoryThreshold', [$value]);

        return parent::setInventoryThreshold($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setInventoryStatus($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInventoryStatus', [$value]);

        return parent::setInventoryStatus($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setHighlightLowInventory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHighlightLowInventory', [$value]);

        return parent::setHighlightLowInventory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSlugPrototype($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSlugPrototype', [$value]);

        return parent::setDefaultSlugPrototype($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultShortDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultShortDescription', [$value]);

        return parent::setDefaultShortDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultName($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultName', [$value]);

        return parent::setDefaultName($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaTitle($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaTitle', [$value]);

        return parent::setDefaultMetaTitle($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaKeyword', [$value]);

        return parent::setDefaultMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultMetaDescription', [$value]);

        return parent::setDefaultMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultDescription', [$value]);

        return parent::setDefaultDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setDecrementQuantity($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecrementQuantity', [$value]);

        return parent::setDecrementQuantity($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$value]);

        return parent::setCategory($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setBackOrder($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackOrder', [$value]);

        return parent::setBackOrder($value);
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailabilityDate($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailabilityDate', [$value]);

        return parent::setAvailabilityDate($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaTitles', [$value]);

        return parent::removeMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaTitl($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaTitl', [$value]);

        return parent::removeMetaTitl($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaKeywords', [$value]);

        return parent::removeMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaKeyword', [$value]);

        return parent::removeMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaDescriptions', [$value]);

        return parent::removeMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeMetaDescription', [$value]);

        return parent::removeMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCode', []);

        return parent::getTaxCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototype', [$localization]);

        return parent::getSlugPrototype($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', [$localization]);

        return parent::getShortDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerializedData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerializedData', []);

        return parent::getSerializedData();
    }

    /**
     * {@inheritDoc}
     */
    public function getPageTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageTemplate', []);

        return parent::getPageTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', [$localization]);

        return parent::getName($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinimumQuantityToOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinimumQuantityToOrder', []);

        return parent::getMinimumQuantityToOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitles', []);

        return parent::getMetaTitles();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', [$localization]);

        return parent::getMetaTitle($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeywords', []);

        return parent::getMetaKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaKeyword(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaKeyword', [$localization]);

        return parent::getMetaKeyword($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescriptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescriptions', []);

        return parent::getMetaDescriptions();
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', [$localization]);

        return parent::getMetaDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaximumQuantityToOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaximumQuantityToOrder', []);

        return parent::getMaximumQuantityToOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getManageInventory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManageInventory', []);

        return parent::getManageInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function getLowInventoryThreshold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLowInventoryThreshold', []);

        return parent::getLowInventoryThreshold();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsUpcoming()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsUpcoming', []);

        return parent::getIsUpcoming();
    }

    /**
     * {@inheritDoc}
     */
    public function getInventoryThreshold()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInventoryThreshold', []);

        return parent::getInventoryThreshold();
    }

    /**
     * {@inheritDoc}
     */
    public function getInventoryStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInventoryStatus', []);

        return parent::getInventoryStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getHighlightLowInventory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHighlightLowInventory', []);

        return parent::getHighlightLowInventory();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', [$localization]);

        return parent::getDescription($localization);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultSlugPrototype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultSlugPrototype', []);

        return parent::getDefaultSlugPrototype();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultShortDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultShortDescription', []);

        return parent::getDefaultShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultName', []);

        return parent::getDefaultName();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaTitle', []);

        return parent::getDefaultMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaKeyword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaKeyword', []);

        return parent::getDefaultMetaKeyword();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultMetaDescription', []);

        return parent::getDefaultMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultDescription', []);

        return parent::getDefaultDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function getDecrementQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecrementQuantity', []);

        return parent::getDecrementQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function getBackOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackOrder', []);

        return parent::getBackOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailabilityDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailabilityDate', []);

        return parent::getAvailabilityDate();
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaTitles($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaTitles', [$value]);

        return parent::addMetaTitles($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaTitl($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaTitl', [$value]);

        return parent::addMetaTitl($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaKeywords($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaKeywords', [$value]);

        return parent::addMetaKeywords($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaKeyword($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaKeyword', [$value]);

        return parent::addMetaKeyword($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaDescriptions($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaDescriptions', [$value]);

        return parent::addMetaDescriptions($value);
    }

    /**
     * {@inheritDoc}
     */
    public function addMetaDescription($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMetaDescription', [$value]);

        return parent::addMetaDescription($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototypesWithRedirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototypesWithRedirect', []);

        return parent::getSlugPrototypesWithRedirect();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlugPrototypesWithRedirect(\Oro\Bundle\RedirectBundle\Model\SlugPrototypesWithRedirect $slugPrototypesWithRedirect)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlugPrototypesWithRedirect', [$slugPrototypesWithRedirect]);

        return parent::setSlugPrototypesWithRedirect($slugPrototypesWithRedirect);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugPrototypes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugPrototypes', []);

        return parent::getSlugPrototypes();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlugPrototype', [$slugPrototype]);

        return parent::addSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlugPrototype', [$slugPrototype]);

        return parent::removeSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function hasSlugPrototype(\Oro\Bundle\LocaleBundle\Entity\LocalizedFallbackValue $slugPrototype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSlugPrototype', [$slugPrototype]);

        return parent::hasSlugPrototype($slugPrototype);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugs', []);

        return parent::getSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function addSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSlug', [$slug]);

        return parent::addSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSlug', [$slug]);

        return parent::removeSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function resetSlugs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'resetSlugs', []);

        return parent::resetSlugs();
    }

    /**
     * {@inheritDoc}
     */
    public function hasSlug(\Oro\Bundle\RedirectBundle\Entity\Slug $slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasSlug', [$slug]);

        return parent::hasSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getBaseSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBaseSlug', []);

        return parent::getBaseSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getSlugByLocalization(\Oro\Bundle\LocaleBundle\Entity\Localization $localization = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlugByLocalization', [$localization]);

        return parent::getSlugByLocalization($localization);
    }

}
