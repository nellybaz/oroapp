<?php

namespace Proxies\__CG__\Oro\Bundle\MagentoBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MagentoRestTransport extends \Oro\Bundle\MagentoBundle\Entity\MagentoRestTransport implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'apiToken', 'apiUrl', 'apiUser', 'apiKey', 'syncStartDate', 'initialSyncStartDate', 'syncRange', 'websiteId', 'websites', 'isExtensionInstalled', 'extensionVersion', 'magentoVersion', 'guestCustomerSync', 'isDisplayOrderNotes', 'adminUrl', 'newsletterSubscriberSyncedToId', 'sharedGuestEmailList', 'settings', 'id', 'channel'];
        }

        return ['__isInitialized__', 'apiToken', 'apiUrl', 'apiUser', 'apiKey', 'syncStartDate', 'initialSyncStartDate', 'syncRange', 'websiteId', 'websites', 'isExtensionInstalled', 'extensionVersion', 'magentoVersion', 'guestCustomerSync', 'isDisplayOrderNotes', 'adminUrl', 'newsletterSubscriberSyncedToId', 'sharedGuestEmailList', 'settings', 'id', 'channel'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MagentoRestTransport $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getSettingsBag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSettingsBag', []);

        return parent::getSettingsBag();
    }

    /**
     * {@inheritDoc}
     */
    public function setApiToken($apiToken)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApiToken', [$apiToken]);

        return parent::setApiToken($apiToken);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiToken', []);

        return parent::getApiToken();
    }

    /**
     * {@inheritDoc}
     */
    public function isSupportedOrderNoteExtensionVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSupportedOrderNoteExtensionVersion', []);

        return parent::isSupportedOrderNoteExtensionVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setApiUrl($apiUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApiUrl', [$apiUrl]);

        return parent::setApiUrl($apiUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiUrl', []);

        return parent::getApiUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setApiUser($apiUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApiUser', [$apiUser]);

        return parent::setApiUser($apiUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiUser', []);

        return parent::getApiUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setApiKey($apiKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApiKey', [$apiKey]);

        return parent::setApiKey($apiKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiKey', []);

        return parent::getApiKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncStartDate(\DateTime $syncStartDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncStartDate', [$syncStartDate]);

        return parent::setSyncStartDate($syncStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncStartDate', []);

        return parent::getSyncStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSyncRange($syncRange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSyncRange', [$syncRange]);

        return parent::setSyncRange($syncRange);
    }

    /**
     * {@inheritDoc}
     */
    public function getSyncRange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSyncRange', []);

        return parent::getSyncRange();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsiteId($websiteId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsiteId', [$websiteId]);

        return parent::setWebsiteId($websiteId);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsiteId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsiteId', []);

        return parent::getWebsiteId();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsites(array $websites)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsites', [$websites]);

        return parent::setWebsites($websites);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsites()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsites', []);

        return parent::getWebsites();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsExtensionInstalled($isExtensionInstalled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsExtensionInstalled', [$isExtensionInstalled]);

        return parent::setIsExtensionInstalled($isExtensionInstalled);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsExtensionInstalled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsExtensionInstalled', []);

        return parent::getIsExtensionInstalled();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtensionVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtensionVersion', []);

        return parent::getExtensionVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtensionVersion($extensionVersion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtensionVersion', [$extensionVersion]);

        return parent::setExtensionVersion($extensionVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function isSupportedExtensionVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSupportedExtensionVersion', []);

        return parent::isSupportedExtensionVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function getMagentoVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMagentoVersion', []);

        return parent::getMagentoVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setMagentoVersion($magentoVersion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMagentoVersion', [$magentoVersion]);

        return parent::setMagentoVersion($magentoVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function setGuestCustomerSync($guestCustomerSync)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuestCustomerSync', [$guestCustomerSync]);

        return parent::setGuestCustomerSync($guestCustomerSync);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuestCustomerSync()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuestCustomerSync', []);

        return parent::getGuestCustomerSync();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsDisplayOrderNotes($isDisplayOrderNotes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsDisplayOrderNotes', [$isDisplayOrderNotes]);

        return parent::setIsDisplayOrderNotes($isDisplayOrderNotes);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsDisplayOrderNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsDisplayOrderNotes', []);

        return parent::getIsDisplayOrderNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdminUrl($adminUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdminUrl', [$adminUrl]);

        return parent::setAdminUrl($adminUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdminUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdminUrl', []);

        return parent::getAdminUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function getInitialSyncStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitialSyncStartDate', []);

        return parent::getInitialSyncStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitialSyncStartDate($initialSyncStartDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitialSyncStartDate', [$initialSyncStartDate]);

        return parent::setInitialSyncStartDate($initialSyncStartDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsletterSubscriberSyncedToId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsletterSubscriberSyncedToId', []);

        return parent::getNewsletterSubscriberSyncedToId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNewsletterSubscriberSyncedToId($newsletterSubscriberSyncedToId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNewsletterSubscriberSyncedToId', [$newsletterSubscriberSyncedToId]);

        return parent::setNewsletterSubscriberSyncedToId($newsletterSubscriberSyncedToId);
    }

    /**
     * {@inheritDoc}
     */
    public function getSharedGuestEmailList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSharedGuestEmailList', []);

        return parent::getSharedGuestEmailList();
    }

    /**
     * {@inheritDoc}
     */
    public function setSharedGuestEmailList(array $sharedGuestEmailList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSharedGuestEmailList', [$sharedGuestEmailList]);

        return parent::setSharedGuestEmailList($sharedGuestEmailList);
    }

    /**
     * {@inheritDoc}
     */
    public function getWsdlUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWsdlUrl', []);

        return parent::getWsdlUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setWsdlUrl($wsdlUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWsdlUrl', [$wsdlUrl]);

        return parent::setWsdlUrl($wsdlUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setChannel(\Oro\Bundle\IntegrationBundle\Entity\Channel $channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChannel', [$channel]);

        return parent::setChannel($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function getChannel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChannel', []);

        return parent::getChannel();
    }

}
