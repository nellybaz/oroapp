<?php

namespace Oro\Bundle\DashboardBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    /**
     * {@inheritDoc}
     *
     * @SuppressWarnings(PHPMD.ExcessiveMethodLength)
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $treeBuilder->root('oro_dashboard')
            ->children()
                ->arrayNode('widgets_configuration')
                    ->info('Form fields used for widget configuration that will be added to each widget')
                        ->useAttributeAsKey('name')
                        ->prototype('array')
                            ->children()
                                ->scalarNode('type')->end()
                                ->arrayNode('options')
                                    ->prototype('variable')->end()
                                ->end()
                                ->booleanNode('show_on_widget')
                                    ->defaultFalse()
                                ->end()
                                ->arrayNode('converter_attributes')
                                    ->prototype('variable')->end()
                                ->end()
                                ->scalarNode('aclClass')
                                    ->info('Not used since 1.10, config node is deprecated and still there only for BC')
                                ->end()
                                ->scalarNode('aclPermission')
                                    ->info('Not used since 1.10, config node is deprecated and still there only for BC')
                                ->end()
                            ->end()
                        ->end()
                ->end()
                ->arrayNode('widgets')
                    ->info('Configuration of widgets')
                    ->useAttributeAsKey('name')
                    ->prototype('array')
                        ->ignoreExtraKeys()
                        ->children()
                            ->scalarNode('label')
                                ->info('The label name for widget title')
                                ->cannotBeEmpty()
                            ->end()
                            ->scalarNode('icon')
                                ->info('Path to icon')
                            ->end()
                            ->scalarNode('description')
                                ->info('translatable description')
                            ->end()
                            ->scalarNode('route')
                                ->info('The route name of a controller responsible to render a widget')
                                ->isRequired()
                                ->cannotBeEmpty()
                            ->end()
                            ->arrayNode('route_parameters')
                                ->info('Additional parameters for the route. "widget" parameter is added automatically')
                                ->useAttributeAsKey('name')
                                ->prototype('variable')
                                ->end()
                            ->end()
                            ->scalarNode('acl')
                                ->info('The ACL ancestor')
                                ->cannotBeEmpty()
                            ->end()
                            ->booleanNode('enabled')
                                ->defaultTrue()
                            ->end()
                            ->booleanNode('isNew')
                                ->info("Add label 'New' next to the title")
                                ->defaultFalse()
                            ->end()
                            ->scalarNode('applicable')
                                ->info('Is widget applicable (expression for config resolver)')
                                ->cannotBeEmpty()
                            ->end()
                            ->arrayNode('configuration_dialog_options')
                                ->addDefaultsIfNotSet()
                                ->info('Options that will be pass to widget configuration dialog initialization')
                                ->children()
                                    ->booleanNode('resizable')
                                        ->defaultFalse()
                                    ->end()
                                    ->integerNode('minWidth')->end()
                                    ->integerNode('minHeight')->end()
                                    ->scalarNode('title')->end()
                                ->end()
                            ->end()
                            ->arrayNode('configuration')
                                ->info('Form fields used for widget configuration')
                                ->useAttributeAsKey('name')
                                ->prototype('array')
                                    ->children()
                                        ->scalarNode('type')->end()
                                        ->arrayNode('options')
                                            ->prototype('variable')->end()
                                            ->info('Form options')
                                        ->end()
                                        ->booleanNode('show_on_widget')
                                            ->defaultFalse()
                                            ->info('Should or not saved value be shown on widget')
                                        ->end()
                                        ->arrayNode('converter_attributes')
                                            ->prototype('variable')->end()
                                            ->info('Value converter additional attributes')
                                        ->end()
                                        ->scalarNode('aclClass')->defaultFalse()->end()
                                        ->scalarNode('aclPermission')->defaultFalse()->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('data_items')
                                ->info('A list of additional items for "data items" widgets')
                                ->useAttributeAsKey('name')
                                ->prototype('array')
                                    ->ignoreExtraKeys()
                                    ->children()
                                        ->scalarNode('label')
                                            ->info('The label name for item')
                                            ->isRequired()
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->scalarNode('data_provider')
                                            ->info('Service method to collect data')
                                            ->isRequired()
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->scalarNode('template')
                                            ->info('The label name for item')
                                            ->isRequired()
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->scalarNode('acl')
                                            ->info('The ACL ancestor')
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->booleanNode('enabled')
                                            ->defaultTrue()
                                        ->end()
                                        ->scalarNode('applicable')
                                            ->info('Is item applicable (expression for config resolver)')
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->integerNode('position')
                                            ->info('The position in which an item is rendered')
                                            ->cannotBeEmpty()
                                            ->defaultValue(0)
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                            ->arrayNode('items')
                                ->info('A list of additional items for "itemized" widgets')
                                ->useAttributeAsKey('name')
                                ->prototype('array')
                                    ->ignoreExtraKeys()
                                    ->children()
                                        ->scalarNode('label')
                                            ->info('The label name for item')
                                            ->isRequired()
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->scalarNode('icon')
                                            ->info('The name of item icon. Use only icon name without "fa-" prefix')
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->scalarNode('class')
                                            ->info('CSS class')
                                        ->end()
                                        ->scalarNode('route')
                                            ->info('The redirect route name')
                                            ->isRequired()
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->arrayNode('route_parameters')
                                            ->info('Additional parameters for the route')
                                            ->useAttributeAsKey('name')
                                            ->prototype('variable')
                                            ->end()
                                        ->end()
                                        ->scalarNode('acl')
                                            ->info('The ACL ancestor')
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->booleanNode('enabled')
                                            ->defaultTrue()
                                        ->end()
                                        ->scalarNode('applicable')
                                            ->info('Is item applicable (expression for config resolver)')
                                            ->cannotBeEmpty()
                                        ->end()
                                        ->integerNode('position')
                                            ->info('The position in which an item is rendered')
                                            ->cannotBeEmpty()
                                            ->defaultValue(0)
                                        ->end()
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('dashboards')
                    ->info('Configuration of dashboards')
                    ->useAttributeAsKey('name')
                    ->prototype('array')
                        ->children()
                            ->scalarNode('twig')
                                ->info(
                                    'The name of TWIG template.'
                                    . ' Default template is "OroDashboardBundle:Index:default.html.twig"'
                                )
                                ->cannotBeEmpty()
                            ->end()
                        ->end()
                    ->end()
                ->end()
            ->end();

        return $treeBuilder;
    }
}
