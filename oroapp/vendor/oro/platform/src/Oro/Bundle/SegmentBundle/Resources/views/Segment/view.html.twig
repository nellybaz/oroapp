{% extends 'OroUIBundle:actions:view.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
{% import 'OroSegmentBundle::macros.html.twig' as segmentQD %}
{% oro_title_set({params : {"%segment.name%": entity.name, "%segment.group%": segmentGroup|trans} }) %}
{% set pageTitle = entity.name %}

{% block navButtons %}
    {{ segmentQD.runButton(entity, true) }}
    {% if isDesktopVersion() and is_granted('EDIT', entity) %}
        {{ UI.editButton({
            'path': path('oro_segment_update', {'id': entity.id}),
            'entity_label': 'oro.segment.entity_label'|trans
        }) }}
    {% endif %}
    {% if isDesktopVersion() and is_granted('DELETE', entity) %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_segment', {'id': entity.id}),
            'dataRedirect': path('oro_segment_index'),
            'aCss': 'no-hash remove-button',
            'dataId': entity.id,
            'id': 'btn-remove-segment',
            'entity_label': 'oro.segment.entity_label'|trans
        }) }}
    {% endif %}
{% endblock navButtons %}

{% block pageHeader %}
    {% set breadcrumbs = {
        'entity': entity,
        'indexPath': path('oro_segment_index'),
        'indexLabel': 'oro.segment.entity_plural_label'|trans,
        'entityTitle': entity.name
    } %}
    {{ parent() }}
{% endblock pageHeader %}

{% block content_data %}
    {% if gridName is defined and gridName %}
        {% set renderParams = renderParams|default({})|merge({enableViews: false}) %}
        {% set gridParams =  {
            '_grid_view': {'_disabled': true},
            '_tags'     : {'_disabled': true}
        } %}
        {% if oro_config_value('oro_report.display_sql_query') %}
            {% set gridParams = gridParams|merge({'display_sql_query': true}) %}
        {% endif %}
        {% set params = params|default({})|merge(gridParams) %}
        {{ dataGrid.renderGrid(gridName, params, renderParams) }}
    {% else %}
        <div class="container-fluid">
            <div class="grid-container">
                <div class="no-data">
                    <span>{{ 'Invalid segment configuration'|trans }}</span>
                </div>
            </div>
        </div>
    {% endif %}
{% endblock content_data %}
