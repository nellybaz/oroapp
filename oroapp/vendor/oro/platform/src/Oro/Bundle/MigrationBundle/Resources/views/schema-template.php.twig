<?php

namespace {{ namespace }}\Migrations\Schema;

use Doctrine\DBAL\Schema\Schema;
use Oro\Bundle\MigrationBundle\Migration\Installation;
use Oro\Bundle\MigrationBundle\Migration\QueryBag;

/**
 * @SuppressWarnings(PHPMD.TooManyMethods)
 * @SuppressWarnings(PHPMD.ExcessiveClassLength)
 */
class {{ className }} implements Installation
{
    /**
     * {@inheritdoc}
     */
    public function getMigrationVersion()
    {
        return '{{ version }}';
    }

    /**
     * {@inheritdoc}
     */
    public function up(Schema $schema, QueryBag $queries)
    {
        /** Tables generation **/
{% for table in schema.tables if allowedTables is empty or allowedTables[table.name] is defined %}
        $this->{{ 'create' ~ table.name|replace({'_': ' '})|title|replace({' ': ''}) ~ 'Table' }}($schema);
{% endfor %}

        /** Foreign keys generation **/
{% for table in schema.tables if allowedTables is empty or allowedTables[table.name] is defined %}
{% if table.ForeignKeys is not empty %}
        $this->{{ 'add' ~ table.name|replace({'_': ' '})|title|replace({' ': ''}) ~ 'ForeignKeys' }}($schema);
{% endif %}
{% endfor %}
    }
{% for table in schema.tables if allowedTables is empty or allowedTables[table.name] is defined %}
{% set methodName = 'create' ~ table.name|replace({'_': ' '})|title|replace({' ': ''}) ~ 'Table' %}

    /**
     * Create {{ table.name }} table
     *
     * @param Schema $schema
     */
    protected function {{ methodName }}(Schema $schema)
    {
        $table = $schema->createTable('{{ table.name }}');
{% for column in table.columns %}
{% set columnExtendedOptions = extendedOptions[table.name][column.name] is defined ? extendedOptions[table.name][column.name] : null %}
        $table->addColumn('{{ column.name }}', '{{ column.type.name }}', {{ _self.dumpColumnOptions(column, columnExtendedOptions) }});
{% endfor %}
{% for index in table.indexes %}
{% if index.isPrimary %}
        $table->setPrimaryKey({{ _self.dumpArray(index.columns) }});
{% elseif index.isUnique %}
        $table->addUniqueIndex({{ _self.dumpArray(index.columns) }}, '{{ index.name }}');
{% else %}
        $table->addIndex({{ _self.dumpArray(index.columns) }}, '{{ index.name }}', {{ _self.dumpArray(index.flags) }});
{% endif %}
{% endfor %}
    }
{% endfor %}
{% for table in schema.tables if allowedTables is empty or allowedTables[table.name] is defined -%}
{% set methodName = 'add' ~ table.name|replace({'_': ' '})|title|replace({' ': ''}) ~ 'ForeignKeys' %}
{% if table.ForeignKeys is not empty %}

    /**
     * Add {{ table.name }} foreign keys.
     *
     * @param Schema $schema
     */
    protected function {{ methodName }}(Schema $schema)
    {
        $table = $schema->getTable('{{ table.name }}');
{% for foreignKey in table.ForeignKeys %}
        $table->addForeignKeyConstraint(
            $schema->getTable('{{ foreignKey.foreignTableName }}'),
            {{ _self.dumpArray(foreignKey.localColumns) }},
            {{ _self.dumpArray(foreignKey.foreignColumns) }},
            {{ _self.dumpOptionsArray(foreignKey.options) }}
        );
{% endfor %}
    }
{% endif -%}
{% endfor -%}
}{% spaceless %}

{% macro dumpColumnOptions(column, columnExtendedOptions) %}
{% spaceless %}
{% set options = oro_migration_get_schema_column_options(column) %}
{% set items = [] %}
{% if options.default is defined %}{% set items = items|merge(["'default' => " ~ _self.dumpString(options.default)]) %}{% endif -%}
{% if options.notnull is defined %}{% set items = items|merge(["'notnull' => " ~ _self.dumpBoolean(options.notnull)]) %}{% endif -%}
{% if options.length is defined %}{% set items = items|merge(["'length' => " ~ _self.dumpInteger(options.length)]) %}{% endif -%}
{% if options.precision is defined %}{% set items = items|merge(["'precision' => " ~ _self.dumpInteger(options.precision)]) %}{% endif -%}
{% if options.scale is defined %}{% set items = items|merge(["'scale' => " ~ _self.dumpInteger(options.scale)]) %}{% endif -%}
{% if options.fixed is defined %}{% set items = items|merge(["'fixed' => " ~ _self.dumpBoolean(options.fixed)]) %}{% endif -%}
{% if options.unsigned is defined %}{% set items = items|merge(["'unsigned' => " ~ _self.dumpBoolean(options.unsigned)]) %}{% endif -%}
{% if options.autoincrement is defined %}{% set items = items|merge(["'autoincrement' => " ~ _self.dumpBoolean(options.autoincrement)]) %}{% endif -%}
{% if options.comment is defined %}{% set items = items|merge(["'comment' => " ~ _self.dumpString(options.comment)]) %}{% endif -%}
{% if columnExtendedOptions is not empty %}{% set items = items|merge(["'oro_options' => " ~ _self.dumpOptionsArray(columnExtendedOptions)]) %}{% endif -%}
[{{ items|join(', ')|raw }}]
{% endspaceless %}
{% endmacro %}

{% macro dumpOptionsArray(arrayValues) %}
{% spaceless %}
{% set items = [] %}
{% for valueName, value in arrayValues %}
    {% if value is null %}
        {% set items = items|merge(["'" ~ valueName ~ "' => null"]) %}
    {% elseif value is same as(true) %}
        {% set items = items|merge(["'" ~ valueName ~ "' => true"]) %}
    {% elseif value is same as(false) %}
        {% set items = items|merge(["'" ~ valueName ~ "' => false"]) %}
    {% elseif value is iterable %}
        {% set items = items|merge(["'" ~ valueName ~ "' => " ~ _self.dumpOptionsArray(value)]) %}
    {% else %}
        {% set items = items|merge(["'" ~ valueName ~ "' => '" ~ value ~ "'"]) %}
    {% endif %}
{% endfor %}
[{{ items|join(', ')|raw }}]
{% endspaceless %}
{% endmacro %}

{% macro dumpArray(arrayValues) %}
{% spaceless %}
[{% for value in arrayValues %}{% if not loop.first %}, {% endif %}'{{ value }}'{% endfor %}]
{% endspaceless %}
{% endmacro %}

{% macro dumpBoolean(value) %}
{% spaceless %}
    {% if value %}
        true
    {% else %}
        false
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro dumpString(value) %}
{% spaceless %}
    {% if value is not null %}
        '{{ value }}'
    {% else %}
        null
    {% endif %}
{% endspaceless %}
{% endmacro %}

{% macro dumpInteger(value) %}
{% spaceless %}
    {% if value is not null %}
        {{ value }}
    {% else %}
        null
    {% endif %}
{% endspaceless %}
{% endmacro %}
{% endspaceless %}