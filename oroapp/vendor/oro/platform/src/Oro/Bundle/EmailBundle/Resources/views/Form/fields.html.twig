{% block _email_configuration_oro_email___smtp_settings_password_value_widget %}
    {% if form.parent.parent.parent is not null %}
        {% set data = form.parent.parent.parent.vars.value %}
    {% else %}
        {% set data = form.parent.parent.vars.value %}
    {% endif %}
    {% set options = form.vars.options|default({})|merge({
        elementNamePrototype: full_name,
        id: form.parent.vars.value and form.parent.vars.value.id is defined ? form.parent.vars.value.id : null,
        forEntity: 'user',
        organization: data and data.organization is defined and data.organization ? data.organization.id : null,
        parentElementSelector: 'fieldset',
        showLoading: true
    }) %}
    {{ form_widget(form) }}
    {% if is_granted('oro_config_system') %}
        <span class="help-block">
            <button class="btn btn-primary check-connection-messages"
               data-role="check-smtp-connection"
               data-page-component-module="{{ 'oroemail/js/app/components/check-smtp-connection-component' }}"
               data-page-component-options="{{ options|json_encode }}"
            >{{ 'oro.email.system_configuration.smtp_settings.check_connection.label'|trans }}</button>
        </span>
    <div class="check-connection-messages check-smtp-connection-messages"></div>
    {% endif %}
{% endblock %}

{% block _email_configuration_oro_email___attachment_sync_max_size_value_widget %}
    {{ form_widget(form) }}
    {% if is_granted('oro_config_system') %}
    <span class="help-block">
        <a class="btn btn-danger"
           href="{{ path('oro_email_purge_emails_attachments') }}"
           data-page-component-module="{{ 'oroui/js/app/components/hidden-redirect-component' }}"
           data-page-component-options="{{ {showLoading: true}|json_encode }}"
        >{{ 'oro.email.system_configuration.attachment_configuration.remove_larger_attachments.label'|trans }}</a>
    </span>
    {% endif %}
{% endblock %}

{% block _oro_email_autoresponserule_template_new_entity_translations_widget %}
    {% import 'OroEmailBundle::macros.html.twig' as email %}
    {% set entityNameForm = form.parent.entityName %}

    {{ form_widget(form) }}
    {{ email.renderAvailableVariablesWidget(entityNameForm.vars.value, entityNameForm.vars.id) }}
{% endblock %}

{% block oro_email_template_list_row %}
    <script type="text/template" id="emailtemplate-chooser-template">
        <% _.each(entities, function(entity, i) { %>
        <option value="<%- entity.get('id') %>"><%- entity.get('name') %></option>
        <% }); %>
    </script>

    {{ form_row(form) }}

    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set options = {
        targetSelector: '#' ~ id,
        _sourceElement: '[name$="[' ~ depends_on_parent_field ~ ']"]',
        collectionOptions: {
            route: data_route,
            routeId: data_route_parameter,
            includeNonEntity: includeNonEntity is defined and includeNonEntity ? true : false,
            includeSystemTemplates: includeSystemTemplates is defined and not includeSystemTemplates ? false : true
        }
    } %}

    <div {{ UI.renderPageComponentAttributes({
        view: 'oroemail/js/app/views/email-template-view',
        options: options
    }) }}></div>
{% endblock %}

{% block oro_email_link_to_scope_row %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set options = {
        enableAttachmentSelector: '[data-ftid=oro_entity_config_type_attachment_enabled]',
        _sourceElement: '#' ~ form.vars.id,
    } %}

    {{ form_row(form) }}

    <div {{ UI.renderPageComponentAttributes({
        view: 'oroemail/js/app/views/email-attachment-context-view',
        options: options
    }) }}></div>
{% endblock %}

{% block oro_email_attachments_row %}
    {% set entityAttachmentsArray = [] %}
    {% for attachment in options.entityAttachments %}
        {% set entityAttachmentArray = {
            'id': attachment.id,
            'type': attachment.type,
            'fileName': attachment.fileName,
            'icon': attachment.icon
        } %}
        {% set entityAttachmentsArray = entityAttachmentsArray|merge([entityAttachmentArray]) %}
    {% endfor %}

    {% set attachmentsAvailableArray = [] %}
    {% for attachment in options.attachmentsAvailable %}
        {% set attachmentAvailableArray = {
            'id': attachment.id,
            'type': attachment.type,
            'fileName': attachment.fileName,
            'fileSize': attachment.fileSize,
            'modified': attachment.modified,
            'icon': attachment.icon,
            'preview': attachment.preview
        } %}
        {% set attachmentsAvailableArray = attachmentsAvailableArray|merge([attachmentAvailableArray]) %}
    {% endfor %}

    {% set options = options|merge({
        containerId: id,
        inputName: full_name,
        entityAttachments: entityAttachmentsArray,
        attachmentsAvailable: attachmentsAvailableArray,
        fileIcons: oro_file_icons_config()
    }) %}

    <div data-page-component-module="oroemail/js/app/components/email-attachment-component"
         data-page-component-options="{{ options|json_encode }}">
        {{ form_row(form) }}
    </div>
{% endblock %}

{% block oro_email_emailtemplate_translatation_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    <div class="emailtemplate-translatation oro-tabs tabbable" {{ UI.renderPageComponentAttributes({
        view: 'oroemail/js/app/views/email-translation-view'
    }) }}>
        <ul class="nav nav-tabs">
            {% spaceless %}
                {% if simple_way %}
                    {% for translationsField in form %}
                        {{ _self.renderTabNavItem(translationsField, labels) }}
                    {% endfor %}
                {% else %}
                    {% for translationsLocales in form %}
                        {% for translationsField in translationsLocales %}
                            {{ _self.renderTabNavItem(translationsField, labels, ('defaultLocale' == translationsLocales.vars.name)) }}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
            {% endspaceless %}
        </ul>
        <div class="tab-content">
            {% spaceless %}
                {% if simple_way %}
                    {% for translationsField in form %}
                        {{ _self.renderTab(translationsField) }}
                    {% endfor %}
                {% else %}
                    {% for translationsLocales in form %}
                        {% for translationsField in translationsLocales %}
                            {{ _self.renderTab(translationsField) }}
                        {% endfor %}
                    {% endfor %}
                {% endif %}
            {% endspaceless %}
        </div>
    </div>
{% endblock %}

{% block oro_email_email_folder_tree_row %}
    {% if form.vars.value is not null and form.vars.value|length > 0 %}
        {{ form_row(form) }}
    {% endif %}
{% endblock %}

{% block oro_email_email_folder_tree_widget %}
    {% set options = {
        dataInputSelector: 'input[name="' ~ full_name ~ '"]',
        checkAllSelector: '.check-all',
        relatedCheckboxesSelector: '.folder-list :checkbox'
    } %}
    <div class="folder-tree-widget"
         data-page-component-module="oroemail/js/app/components/folder-tree-component"
         data-page-component-options="{{ options|json_encode }}">
        <label class="folder-label">
            <input class="check-all" type="checkbox">
            {{ "oro.email.imap.folder.checkAll"|trans }}
        </label>
        <div class="folder-list">
            {% for key, folder in form.vars.value if folder.parentFolder is null and folder.outdatedAt is null %}
                {{ _self.renderFolder(key, folder, form.vars.full_name) }}
            {% endfor %}
        </div>
        <input name="{{ full_name }}" type="hidden">
    </div>
{% endblock %}

{% block oro_email_mailbox_grid_row %}
    {{ form_label(form) }}
    {{ form_widget(form) }}
{% endblock %}

{% block oro_email_mailbox_grid_label %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% set redirectData = {
        'route': app.request.attributes.get('_route'),
        'parameters': app.request.attributes.get('_route_params'),
    } %}
    {% if is_granted('oro_organization_update') %}
        <div class="row" style="margin-top: -42px;">
            <div class="pull-right">
                <div class="btn-group">
                    {{ UI.addButton({
                        'path': path('oro_email_mailbox_create', {redirectData: redirectData}),
                        'label': 'oro.email.system_configuration.mailbox_configuration.add_mailbox.label'|trans
                    }) }}
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block oro_email_mailbox_grid_widget %}
    {% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}
    {% set redirectData = {
        'route': app.request.attributes.get('_route'),
        'parameters': app.request.attributes.get('_route_params')
    } %}
    <div class="row" style="margin-right: -20px;">
        {{ dataGrid.renderGrid('base-mailboxes-grid', {
            'redirectData': redirectData, 'organization_ids': [get_current_organization().getId()]
        }) }}
    </div>
{% endblock %}

{% block oro_email_mailbox_widget %}
    {% set imapAccountType %}
        {% if  form.children.origin is defined %}
            {{ form_widget(form.children.origin) }}
            {{ form_errors(form.children.origin) }}
        {% elseif form.children.imapAccountType is defined %}
            {{ form_widget(form.children.imapAccountType) }}
            {{ form_errors(form.children.imapAccountType) }}
        {% endif %}
    {% endset %}

    {% set process = form_row(form.children.processType) ~
        form_widget(form.children.processSettings) %}
    {% set access = form_row(form.children.authorizedUsers) ~
        form_row(form.children.authorizedRoles)
    %}
    {% set options = {
        el: '#' ~ form.vars.id
    } %}
    <div data-page-component-module="oroemail/js/app/views/mailbox-update-view"
         data-page-component-options="{{ options|json_encode }}">
        <fieldset class="form-horizontal form-horizontal-large">
            <h5 class="user-fieldset">
                <span>{{ 'oro.email.mailbox.general.label'|trans }}</span>
            </h5>
            <div class="control-group-wrapper">
                {{ form_widget(form) }}
            </div>
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5 class="user-fieldset">
                <span>{{ 'oro.email.mailbox.origin.label'|trans }}</span>
            </h5>
            <div class="control-group-wrapper">
                {{ imapAccountType|raw }}
            </div>
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5 class="user-fieldset">
                <span>{{ 'oro.email.mailbox.process.label'|trans }}</span>
            </h5>
            <div class="control-group-wrapper">
                {{ process|raw }}
            </div>
        </fieldset>
        <fieldset class="form-horizontal form-horizontal-large">
            <h5 class="user-fieldset">
                <span>{{ 'oro.email.mailbox.access.label'|trans }}</span>
            </h5>
            <div class="control-group-wrapper">
                {{ access|raw }}
            </div>
        </fieldset>
    </div>
{% endblock %}

{#
    Renders tab `li` tag for bootstrap tab panels
    paramters:
        form         - instance of FormView, it's a view for localized field
        localeLabels - array with user friendly labels for locale codes
        isDefault    - is current locale's tab label should be marked as default
#}
{% macro renderTabNavItem(form, localeLabels, isDefault = false) %}
    {% set locale = form.vars.name %}

    <li {% if (app.request.locale == locale) %}class="active"{% endif %}>
        <a href="javascript:void(0);" data-role="change-language" data-target=".emailtemplate-translatation-fields-{{ locale }}" data-toggle="tab" data-related="{{ locale }}">
            {{- localeLabels[locale]|default('N/A')|trans -}}{% if isDefault %} {% trans %}[Default]{% endtrans %}{% endif -%}
        </a>
    </li>
{% endmacro %}

{#
    Renders content of bootstrap tab panel
    paramters:
        form - instance of FormView, it's a view for localized field
#}
{% macro renderTab(form) %}
    {% set locale = form.vars.name %}

    <div class="emailtemplate-translatation-fields-{{ locale }} tab-pane{% if (app.request.locale == locale) %} active{% endif %}">
        {{ form_widget(form) }}
    </div>
{% endmacro %}

{% macro renderFolder(key, folder, namePrefix, maxDepth = 10) %}
    {% if maxDepth %}
        <div>
            <label class="folder-label">
                <input type="checkbox" data-name="syncEnabled"{% if folder.syncEnabled %}checked="checked"{% endif %}>
                {{ folder.name }}
            </label>
            <input type="hidden" data-name="fullName" value="{{ folder.fullName }}">
            <input type="hidden" data-name="name" value="{{ folder.name }}">
            <input type="hidden" data-name="type" value="{{ folder.type }}">
            {% if maxDepth > 1 and folder.subFolders|length > 0 %}
                <div class="folder-sub-folders">
                    {% for subKey, subFolder in folder.subFolders %}
                        {{ _self.renderFolder(subKey, subFolder, namePrefix ~ '[' ~ key ~ '][subFolders]', maxDepth - 1) }}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
    {% endif %}
{% endmacro %}
