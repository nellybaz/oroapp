{% block oro_entity_merge_widget %}
    {{ form_javascript(form) }}
    <table class="table table-bordered entity-merge-table">
        <thead>
        <tr class="default-field">
            <td class="merge-first-column" rowspan="2">
                <div class="control-label wrap">
                    {{form_label(form.masterEntity)}}
                </div>
            </td>
            {% for child in form.masterEntity %}
                <td class="entity-merge-column">
                    <div class="entity-merge-fields-blocks-wrapper">
                        <label class="entity-merge-uppercase entity-merge-inline">
                            {{ form_widget(child, {'attr': form.vars.attr|merge({'class': 'entity-merge-field-choice'})}) }}

                            <strong data-entity-key="{{ child.vars.name }}"
                                    data-entity-field-name="{{ child.vars.full_name }}"
                                    class="merge-entity-representative">
                                {{ (oro_entity_merge_render_entity_label(form.vars.value, loop.index - 1)) }}
                            </strong>
                        </label>
                    </div>
                    <a class="entity-merge-select-all" data-entity-key="{{ child.vars.value }}"
                       href="javascript:void(0);">
                        {{ "oro.entity_merge.form.select_all"|trans }}
                    </a>
                </td>
            {% endfor %}
        </tr>
        </thead>
        <tbody>
        {% for child in form.children.fields.children|oro_entity_merge_sort_fields %}
            {{ form_widget(child) }}
        {% endfor %}
        </tbody>
    </table>
    <p>* {{ 'oro.entity_merge.hint.other_related_entities'|trans }}</p>
{% endblock %}

{% block oro_entity_merge_javascript %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    <div {{ UI.renderPageComponentAttributes({
        view: 'oroentitymerge/js/merge-view',
        options: {
            _sourceElement: '#' ~ form.vars.id ~ ' .form-horizontal'
        }
    }) }}></div>
{% endblock %}

{% block oro_entity_merge_field_widget %}
    <tr>
        <td class="merge-first-column">
            {{ form_label(form) }}
            {% if form.children.mode.vars.choices is defined %}
                <div class="entity-merge-strategy-wrapper">

                    <span class="entity-merge-inline entity-merge-strategy-label">
                        <div class="control-label wrap">
                            {{ form_label(form.children.mode) }}
                        </div>
                    </span>

                    <div class="entity-merge-inline">
                        {{ form_widget(form.children.mode, {'attr':{'class' : 'entity-merge-small-select' }}) }}
                    </div>
                </div>
            {% else %}
                {{ form_widget(form.children.mode) }}
            {% endif %}

        </td>
        {% for child in form.children.sourceEntity %}
            <td class="entity-merge-decision-container">
                {{ form_widget(child, {entityOffset: loop.index - 1}) }}
            </td>
        {% endfor %}
    </tr>
{% endblock %}

{% block oro_entity_merge_choice_value_widget %}
    <div class="entity-merge-fields-blocks-wrapper">
        <div class="entity-merge-inline">
            {{ form_widget(form, {'attr': form.vars.attr|merge({'class': 'entity-merge-field-choice'})}) }}
        </div>
        <label data-entity-key="{{ form.vars.name }}" data-entity-field-name="{{ form.vars.full_name }}"
               class="entity-merge-inline-label merge-entity-representative"
               for="{{ id }}" {% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>
            {{ oro_entity_merge_render_field_value(merge_field_data, merge_entity_offset) }}
        </label>
    </div>
{% endblock %}

{% block oro_entity_merge_field_label %}
    {% if label is not sameas(false) %}
        {% if required %}
            {% set label_attr = label_attr|merge({'class': (label_attr.class|default('') ~ ' required')|trim}) %}
        {% endif %}
        {% if label is empty %}
            {% set label = name|humanize %}
        {% endif %}
        <strong {% for attrname, attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans({}, translation_domain) }}</strong>
    {% endif %}
{% endblock %}
