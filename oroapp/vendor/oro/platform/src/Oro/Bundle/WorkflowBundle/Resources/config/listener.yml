services:
    oro_workflow.listener.process_data_serialize:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\ProcessDataSerializeListener'
        arguments:
            - '@oro_workflow.serializer.process.serializer.link'
        tags:
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }
            - { name: doctrine.orm.entity_listener, entity: Oro\Bundle\WorkflowBundle\Entity\ProcessJob, event: postLoad }

    oro_workflow.listener.workflow_data_serialize:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowDataSerializeListener'
        arguments:
            - '@oro_workflow.serializer.data.serializer.link'
            - '@oro_entity.doctrine_helper'
        tags:
            - { name: doctrine.event_listener, event: onFlush }
            - { name: doctrine.event_listener, event: postFlush }
            - { name: doctrine.orm.entity_listener, entity: '%oro_workflow.entity.workflow_item.class%', event: postLoad }

    oro_workflow.listener.workflow_item:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowItemListener'
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@oro_workflow.registry.workflow_manager'
            - '@oro_workflow.entity_connector'
            - '@oro_workflow.cache.entity_aware'
        tags:
            - { name: doctrine.orm.entity_listener, entity: '%oro_workflow.entity.workflow_item.class%', event: postPersist }
            - { name: doctrine.event_listener, event: preRemove }

    oro_workflow.listener.workflow_transition_record:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowTransitionRecordListener'
        arguments:
            - '@event_dispatcher'
            - '@security.token_storage'
        tags:
            - { name: doctrine.orm.entity_listener, entity: Oro\Bundle\WorkflowBundle\Entity\WorkflowTransitionRecord, event: postPersist }

    oro_workflow.listener.start_workflow:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowStartListener'
        arguments:
            - '@oro_workflow.registry.workflow_manager'
            - '@oro_workflow.cache.entity_aware'
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postFlush }

    oro_workflow.listener.event_trigger_collector:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\EventTriggerCollectorListener'
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate }
            - { name: doctrine.event_listener, event: preRemove }
            - { name: doctrine.event_listener, event: postFlush }
            - { name: doctrine.event_listener, event: onClear }

    oro_workflow.listener.extension.process_trigger:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\Extension\ProcessTriggerExtension'
        public: false
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@oro_workflow.process.process_handler'
            - '@oro_workflow.process.logger'
            - '@oro_workflow.cache.process_trigger'
            - '@oro_workflow.process.schedule_policy'
            - '@oro_message_queue.message_producer'
        tags:
            - { name: oro_workflow.listener.event_trigger_collector.extension }

    oro_workflow.listener.extension.transition_trigger_event:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\Extension\TransitionEventTriggerExtension'
        arguments:
            - '@oro_entity.doctrine_helper'
            - '@oro_workflow.cache.transition_trigger_event'
            - '@oro_message_queue.client.message_producer'
            - '@oro_workflow.helper.transition_event_trigger'
            - '@oro_workflow.handler.transition_event_trigger'
        tags:
            - { name: oro_workflow.listener.event_trigger_collector.extension }

    oro_workflow.entity_listener.workflow_definition:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowDefinitionEntityListener'
        arguments:
            - '@service_container'
        tags:
            - { name: doctrine.orm.entity_listener, entity: '%oro_workflow.entity.workflow_definition.class%', event: prePersist }
            - { name: doctrine.orm.entity_listener, entity: '%oro_workflow.entity.workflow_definition.class%', event: preUpdate }
            - { name: doctrine.orm.entity_listener, entity: '%oro_workflow.entity.workflow_definition.class%', event: preRemove }

    oro_workflow.event_listener.transition_triggers:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowTransitionTriggersListener'
        arguments:
            - '@oro_workflow.transition_trigger_assembler'
            - '@oro_workflow.transition_trigger_updater'
        tags:
            - { name: oro_workflow.changes.subscriber }

    oro_workflow.listener.workflow_definition_scope:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowDefinitionScopeListener'
        arguments:
            - '@oro_workflow.manager.workflow_scope'
        tags:
            - { name: oro_workflow.changes.listener, event: oro.workflow.before_activation, method: onActivationWorkflowDefinition }
            - { name: oro_workflow.changes.listener, event: oro.workflow.before_deactivation, method: onDeactivationWorkflowDefinition }
            - { name: oro_workflow.changes.listener, event: oro.workflow.after_create, method: onCreateWorkflowDefinition }
            - { name: oro_workflow.changes.listener, event: oro.workflow.after_update, method: onUpdateWorkflowDefinition }

    oro_workflow.listener.workflow_definition_validate:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\WorkflowDefinitionValidateListener'
        arguments:
            - '@oro_workflow.workflow_assembler'
        tags:
            - { name: oro_workflow.changes.listener, event: oro.workflow.before_create, method: onCreateWorkflowDefinition }
            - { name: oro_workflow.changes.listener, event: oro.workflow.before_update, method: onUpdateWorkflowDefinition }

    oro_workflow.event_listener.role_page_listener:
        class: 'Oro\Bundle\WorkflowBundle\EventListener\RolePageListener'
        arguments:
            - '@translator'
        calls:
            - [setRequest, ['@?request=']]
        tags:
            - { name: kernel.event_listener, event: entity_form.render.before, method: onUpdatePageRender }
            - { name: kernel.event_listener, event: entity_view.render.before, method: onViewPageRender }
