workflows:
    b2b_flow_checkout:
        transition_definitions:
            __start___definition:
                actions:
                    - '@assign_value': [$shipping_method, null]
                    - '@assign_value': [$payment_save_for_later, true]

                    - '@generate_checkout_state_snapshot':
                        entity: $checkout
                        attribute: $.result.startCheckoutState
                    - '@save_checkout_state':
                        entity: $checkout
                        state: $.result.startCheckoutState
                        attribute: $state_token
                    - '@assign_value': [$internal_state_token, $state_token]

            start_from_quickorderform_definition:
                preactions:
                    - '@call_service_method':
                        attribute: $.result.isAllowed
                        service: oro_shopping_list.processor.quick_add_to_checkout
                        method: isAllowed
                    - '@call_service_method':
                       attribute: $.result.isReachedLimit
                       service: oro_shopping_list.manager.shopping_list_limit
                       method: isReachedLimit
                    - '@call_service_method':
                       attribute: $.result.shoppingListLimit
                       service: oro_shopping_list.manager.shopping_list_limit
                       method: getShoppingListLimitForUser
                    - '@call_service_method':
                        service: oro_checkout.condition.is_workflow_start_from_shopping_list_allowed
                        method: isAllowed
                        attribute: $.result.isCheckoutAllowed
                preconditions:
                    '@and':
                        - '@not_empty': $init_context
                        - '@equal': [true, $.result.isAllowed]
                        - '@equal': [true, $.result.isCheckoutAllowed]

            start_from_shoppinglist_definition:
                preactions:
                    - '@find_entity':
                        conditions:
                            '@not_empty': $init_context
                        parameters:
                            class: $init_context.entityClass
                            identifier: $init_context.entityId
                            attribute: $.result.shoppingList
                    - '@call_service_method':
                        service: oro_checkout.condition.is_workflow_start_from_shopping_list_allowed
                        method: isAllowed
                        attribute: $isAllowed
                    - '@call_service_method':
                        service: oro_shopping_list.manager.empty_matrix_grid
                        method: hasEmptyMatrix
                        method_parameters: [$.result.shoppingList]
                        attribute: $.result.shoppingListHasEmptyMatrix
                preconditions:
                   '@and':
                       - '@extendable':
                            events: [extendable_condition.shopping_list_start]
                       - '@has_elements': $.result.shoppingList.lineItems
                       - '@equal': [$isAllowed, true]
                actions:
                    - '@run_action_group':
                        action_group: start_shoppinglist_checkout
                        parameters_mapping:
                            shoppingList: $.result.shoppingList
                            showErrors: true
                        results:
                            data.checkout: $.checkout
                            result.redirectUrl: $.redirectUrl

            unblock_and_recalculate_definition:
                actions:
                    - '@assign_value': [$payment_method, null]
                    - '@assign_value': [$payment_in_progress, false]

                    - '@generate_checkout_state_snapshot':
                        entity: $checkout
                        attribute: $.result.actualCheckoutState
                    - '@save_checkout_state':
                        entity: $checkout
                        state: $.result.actualCheckoutState
                        attribute: $state_token
                    - '@assign_value': [$internal_state_token, $state_token]
