{% block _checkout_form_fields_widget -%}
    {% from 'OroAddressBundle::macros.html.twig' import renderAddress %}
    {% if workflowItem.data.get('disallow_billing_address_edit') %}
        {% set billingAddress = checkout.billingAddress %}
        <fieldset class="grid__row grid__row--offset-none">
            <div class="grid__column grid__column--offset-y grid__column--6">
                {{ renderAddress(checkout.billingAddress) }}
            </div>
        </fieldset>
    {% else %}
        {% import 'OroCheckoutBundle:layouts/default/oro_checkout_frontend_checkout/templates:address.html.twig' as address %}
        {% set hasCustomAddress = false %}
        {% if form.billing_address.id.vars.value %}
            {% set hasCustomAddress = not form.billing_address.vars.value.customerUserAddress and not form.billing_address.vars.value.customerAddress %}
        {% endif %}
        {% set billingAddress = form.billing_address.vars.value %}
        <div data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'orocheckout/js/app/views/address-view',
                 selectors: {
                     address: '#' ~ form.billing_address.customerAddress.vars.id,
                     region: '#' ~ form.billing_address.region.vars.id,
                     shipToBillingCheckbox: '#' ~ form.ship_to_billing_address.vars.id,
                     fieldsContainer: '#checkout-address-fields-container'
                 }
             }|json_encode }}">

            <div class="grid">
                <div class="grid__row grid__row--offset-none">
                    <div class="grid__column grid__column--6">
                        {{ form_row(form.billing_address.customerAddress) }}
                    </div>
                </div>
            </div>

            <div class="grid">
                <div class="grid__row grid__row--offset-none">
                    <div class="grid__column grid__column--6">
                        {{ form_row(form.visitor_email, {'attr': {'placeholder': 'oro.checkout.workflow.b2b_flow_checkout.form.placeholder.visitor.email'|trans}}) }}
                    </div>
                </div>
            </div>

            {{ address.address_form(form.billing_address, form.save_billing_address, hasCustomAddress) }}

            {% set hideShipping = false %}
            {% if billingAddress %}
                {% set typedAddress = billingAddress.customerAddress %}
                {% if typedAddress is empty %}
                    {% set typedAddress  = billingAddress.customerUserAddress %}
                {% endif %}

                {% set hideShipping = typedAddress is not empty and not typedAddress.hasTypeWithName('shipping')  %}
            {% endif %}

            {% if not workflowItem.data.get('disallow_shipping_address_edit') %}
                <fieldset class="grid__row grid__row--offset-none {% if hideShipping %}hidden{% endif %}">
                    <div class="grid__column grid__column--offset-y">
                        {{ form_row(form.ship_to_billing_address) }}
                    </div>
                </fieldset>
            {% endif %}
        </div>
    {% endif %}

    {%  if  form.state_token is defined %}
        {{ form_row(form.state_token) }}
    {% endif %}
{%- endblock %}
