{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroDataGridBundle::macros.html.twig' as dataGrid %}

{% oro_title_set({params : {"%sku%": entity.sku|default('N/A'|trans) , "%name%": (entity.id ? entity.defaultName.string : '')|default('N/A'|trans) } }) %}

{% set formAction = entity.id ? path('oro_product_update', { 'id': entity.id }) : path('oro_product_create')  %}

{% block navButtons %}
    {{ parent() }}

    {{ UI.cancelButton(path('oro_product_index')) }}
    {% set html = UI.saveAndCloseButton() %}
    {% if is_granted('oro_product_create') %}
        {% set saveAndDuplicateButton = UI.saveActionButton({
            'label': 'oro.product.ui.save_and_duplicate'|trans,
            'action': 'save_and_duplicate'
        }) %}
        {% set html = html ~ saveAndDuplicateButton %}
    {% endif %}
    {% if entity.id or is_granted('oro_product_update') %}
        {% set html = html ~ UI.saveAndStayButton() %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_product_index'),
            'indexLabel': 'oro.product.entity_plural_label'|trans,
            'entityTitle': entity.sku ~ ' - ' ~ entity.defaultName
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.product.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    <div {{ UI.renderPageComponentAttributes({
        view: 'oroform/js/app/views/form-loading-view',
        layout: 'separate'
    }) }} data-skip-input-widgets>
        {{ parent() }}
    </div>
{% endblock %}

{% block content_data %}
    {% set id = 'product-edit' %}
    {%  set generalData = {
        'sku': form_row(form.sku),
        'names': form_row(form.names)
    } %}

    {% if entity.isConfigurable %}
        {% set productsVariantSelector %}
            <div data-page-component-module="oroproduct/js/app/components/product-variant-component">
              {{ form_row(form.variantFields) }}
            </div>
        {% endset %}
        {% set generalData = generalData|merge([
            productsVariantSelector
        ]) %}
    {% endif %}

    {% set generalData = generalData|merge([
        form_row(form.slugPrototypesWithRedirect),
        form_row(form.status),
        form_row(form.featured),
        form_row(form.newArrival),
        form_row(form.brand),
        form_row(form.primaryUnitPrecision)
    ]) %}

    {% if oro_is_product_primary_unit_visible(entity) %}
        {% set generalData = generalData|merge([
            form_row(form.additionalUnitPrecisions)
        ]) %}
    {% endif %}

    {% set generalBlock = {
        'title': 'oro.product.sections.general'|trans,
        'class': 'active',
        'subblocks': [{
            'title': '',
            'data': generalData
        },
        {
            'title': '',
            'data': {
                'descriptions': form_row(form.descriptions),
                'shortDescriptions': form_row(form.shortDescriptions),
            },
            'spanClass': 'responsive-cell'
        },
    ]} %}

    {% set dataBlocks = {
        'general': generalBlock
    } %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% if child.vars.name not in entity.variantFields %}
            {% set additionalData = additionalData|merge([form_row(child)]) %}
        {% endif %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.product.sections.additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge({
        'inventory': {
            'title': 'oro.product.sections.inventory'|trans,
            'priority': 5,
            'subblocks': [{
                'title': '',
                'data': {
                    'inventory_status': form_row(form.inventory_status)
                }
            }]
        }
    }) %}

    {% set dataBlocks = dataBlocks|merge({
        'images': {
            'title': 'oro.product.sections.images'|trans,
            'priority': 0,
            'subblocks': [{
                'title': '',
                'data': {
                    'images': form_row(form.images)
                }
            }]
        }
    }) %}

    {% set dataBlocks = dataBlocks|merge({
        'design': {
            'title': 'oro.product.sections.design'|trans,
            'priority': 0,
            'subblocks': [{
                'title': '',
                'data': {
                    'pageTemplate': form_row(form.pageTemplate)
                }
            }]
        }
    }) %}

    {% set productHasVariants = (entity.isConfigurable and form.variantFields.vars.data|length != 0) %}

    {% if productHasVariants %}

        {% set dataGridParameters = {
            'parentProduct': entity.id,
            'attributeFamily': entity.attributeFamily.id
        } %}

        {% if form.variantLinks.appendVariants.vars.value|length != 0 %}
            {% set dataGridParameters = dataGridParameters|merge({appendVariants: form.variantLinks.appendVariants.vars.value}) %}
        {% endif %}

        {% set variantLinksForm = form.variantLinks %}
        {% set dataBlocks = dataBlocks|merge([{
            'title' : 'oro.product.sections.productVariants'|trans,
            'subblocks': [{
                'title' : null,
                'useSpan': false,
                'data' : [
                    form_widget(variantLinksForm.appendVariants, {'id': 'productAppendVariants'}),
                    form_widget(variantLinksForm.removeVariants, {'id': 'productRemoveVariants'}),
                    dataGrid.renderGrid('product-product-variants-edit', dataGridParameters, { cssClass: 'inner-grid' })
                ]
            }]
        }] ) %}
    {% endif %}
    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    <div class="responsive-form-inner">
        {{ parent() }}
    </div>
{% endblock content_data %}
