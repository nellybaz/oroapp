{% extends 'OroUIBundle:actions:update.html.twig' %}
{% import 'OroUIBundle::macros.html.twig' as UI %}
{% import 'OroOrderBundle:Order:macros.html.twig' as SM %}

{% oro_title_set({params : {
    '%identifier%': entity.identifier|default('N/A'|trans),
    '%entityName%': 'oro.order.entity_label'|trans
} }) %}

{% set formAction = entity.id ? path('oro_order_update', { 'id': entity.id }) : path('oro_order_create')  %}

{% form_theme form with ['OroOrderBundle:Form:fields.html.twig'] %}

{% block navButtons %}
    {{ parent() }}

    {{ UI.cancelButton(path('oro_order_index')) }}
    {% set html = UI.saveAndCloseButton() %}
    {% if entity.id or is_granted('oro_order_update') %}
        {% set html = html ~ UI.saveAndStayButton() %}
    {% endif %}
    {% set html = html ~ placeholder('order_update_additional_nav_buttons', {entity: entity}) %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_order_index'),
            'indexLabel': 'oro.order.entity_plural_label'|trans,
            'entityTitle': entity.identifier|default('N/A'|trans)
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.order.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% set pageComponent = {
    module: 'oroorder/js/app/components/entry-point-component',
    options: { route: 'oro_order_entry_point', routeParams: {id: entity.id|default(0)} },
} %}

{% block content_data %}
    {% set id = 'order-edit' %}

    {% set subtotals %}
        <div class="subtotal-error"></div>
        {% include 'OroPricingBundle:Totals:totals.html.twig' with {
            pageComponent: 'oroorder/js/app/components/totals-component',
            options: {totals: orderData.totals}
        } only %}
    {% endset %}

    {% set ownerSelectors %}

        <div data-page-component-module="oroorder/js/app/components/related-data-component"
             data-page-component-options="{{ {
                 selectors: {
                     customer: '#' ~ form.customer.vars.id,
                     customerUser: '#' ~ form.customerUser.vars.id
                 }
             }|json_encode }}">
            <div data-page-component-module="orocustomer/js/app/components/customer-selection-component">
                {{ form_row(form.customer) }}
                {{ form_row(form.customerUser) }}
            </div>
        </div>
    {% endset %}

    {% set lineItems %}
        {% set subtotalType = constant('Oro\\Bundle\\PricingBundle\\SubtotalProcessor\\Provider\\LineItemSubtotalProvider::TYPE') %}
        <div class="order-line-items"
             data-page-component-module="oroui/js/app/components/view-component"
             data-page-component-options="{{ {
                 view: 'oroorder/js/app/views/line-items-view',
                 tierPrices: orderData.tierPrices|default({}),
                 currency: entity.currency,
                 customer: entity.customer is null ? null : entity.customer.id,
                 subtotalType: subtotalType
             }|json_encode }}"
             data-layout="separate">
            {{ form_widget(form.lineItems) }}
            {{ form_errors(form.lineItems) }}
        </div>

        {% set entityDataOptions = {entityData: orderData} %}
        <div
                data-page-component-module="oroorder/js/app/components/data-load-component"
                data-page-component-options="{{ entityDataOptions|json_encode }}"></div>
    {% endset %}

    {% set dataBlocks = [
        {
            'title': 'oro.order.sections.general'|trans,
            'class': 'active',
            'subblocks': [{
                'data': [
                    ownerSelectors,
                    form_row(form.currency),
                    UI.renderProperty('oro.order.currency.label'|trans, entity.currency)
                ]
            }]
        },
        {
            'title': 'oro.order.sections.order_line_items'|trans,
            'content_attr': {'class': 'order-line-items-content'},
            'subblocks': [{
                'title': '',
                'data': [lineItems]
            }]
        }
    ] %}

    {% if isBillingAddressGranted %}
        {% set billingAddress %}
            <div
                data-layout="separate"
                data-page-component-module="oroui/js/app/components/view-component"
                data-page-component-options="{{ {
                    view: 'oroorder/js/app/views/address-view',
                    type: 'billing',
                    selectors: {
                        address: '#' ~ form.billingAddress.customerAddress.vars.id,
                        subtotalsFields: [
                        '#' ~ form.billingAddress.country.vars.id,
                        '#' ~ form.billingAddress.street.vars.id,
                        '#' ~ form.billingAddress.street2.vars.id,
                        '#' ~ form.billingAddress.city.vars.id,
                        '#' ~ form.billingAddress.region.vars.id,
                        '#' ~ form.billingAddress.postalCode.vars.id
                        ]
                    }
                }|json_encode }}">
                {{ form_widget(form.billingAddress) }}
            </div>
        {% endset %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.order.billing_address.label'|trans,
            'subblocks': [{
                'data': [billingAddress]
            }]
        }]) %}
    {% endif %}

    {% if isShippingAddressGranted %}
        {% set shippingAddress %}
            {% if form.shippingAddress.customerAddress is defined %}
                {% set idAddressBlock = '#' ~ form.shippingAddress.customerAddress.vars.id %}
            {% else %}
                {% set idAddressBlock = null %}
            {% endif %}
            <div
                data-layout="separate"
                data-page-component-module="oroui/js/app/components/view-component"
                data-page-component-options="{{ {
                    view: 'oroorder/js/app/views/address-view',
                    type: 'shipping',
                    selectors: {
                        address: idAddressBlock ,
                        subtotalsFields: [
                        '#' ~ form.shippingAddress.country.vars.id,
                        '#' ~ form.shippingAddress.street.vars.id,
                        '#' ~ form.shippingAddress.street2.vars.id,
                        '#' ~ form.shippingAddress.city.vars.id,
                        '#' ~ form.shippingAddress.region.vars.id,
                        '#' ~ form.shippingAddress.postalCode.vars.id
                        ]
                    }
                }|json_encode }}">
                {{ form_widget(form.shippingAddress) }}
            </div>
        {% endset %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.order.shipping_address.label'|trans,
            'subblocks': [{
                'data': [shippingAddress]
            }]
        }]) %}
    {% endif %}

    {% set shippingInformation %}
        <div class="possible-shipping-methods-info">
            {{ UI.renderAttribute('oro.order.form.shipping_options.label'|trans,
                '<div class="possible_shipping_methods_container">' ~ SM.renderPossibleShippingMethods(form, entity) ~ '</div>'
            ) }}

            {% set options = {
                view: 'oroorder/js/app/views/shipping-cost-view'
            } %}

            <div
                data-layout="separate"
                data-page-component-module="oroui/js/app/components/view-component"
                data-page-component-options="{{ options|json_encode }}">
                {{ form_row(form.overriddenShippingCostAmount) }}
            </div>
        </div>
    {% endset %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.order.sections.shipping_information'|trans,
        'subblocks': [{
            'data': [shippingInformation]
        }]
    }]) %}

    {% set additionalData = [
        form_row(form.poNumber),
        form_row(form.shipUntil),
        form_row(form.customerNotes)
    ] %}

    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.order.sections.additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% if entity.id %}
        {% set discounts %}
            <div class="oro-discount-collection-container">
                {{ form_widget(form.discounts) }}
                <div class="discounts-sum-error">{{ form_errors(form.discounts) }}</div>
                <div class="discounts-sum-error">{{ form_row(form.discountsSum) }}</div>
            </div>
        {% endset %}

        {% set dataBlocks = dataBlocks|merge({
            'discounts': {
                'title': 'oro.order.sections.discounts'|trans,
                'class': 'active',
                'subblocks': [{
                    'data': [discounts],
                }]
            }
        }) %}
    {% endif %}

    {% set dataBlocks = dataBlocks|merge([{
        'title': 'oro.order.sections.subtotals'|trans,
        'class': 'active',
        'priority': 900,
        'subblocks': [{
            'data': [subtotals]
        }]
    }]) %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    {{ parent() }}
{% endblock content_data %}
