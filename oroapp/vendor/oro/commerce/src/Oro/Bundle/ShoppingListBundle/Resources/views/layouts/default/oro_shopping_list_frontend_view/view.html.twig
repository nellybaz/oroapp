{% block _shopping_list_view_container_widget %}
    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_view_container_content_widget %}
    {% set attr = layout_attr_defaults(attr, {
        'id': 'shopping_list_view_container_content',
        'data-page-component-module': 'oroui/js/app/components/view-component',
        '~data-page-component-options': {
            'view': 'oroui/js/app/views/layout-subtree-view',
            'blockId' : block.vars.id,
            'reloadEvents': ['shopping-list:refresh', 'product:quantity-unit:update', 'workflow:transitions_failure', 'frontend:item:delete']
        }
    }) %}

    <div {{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_view_container_checkout_message_widget %}
    <div class="notification-flash notification-flash--warning">
        <div class="notification-flash__text">
            {{ 'oro.frontend.shoppinglist.messages.must_be_logged'|trans({'%url%': path('oro_customer_customer_user_security_login')})|raw }}
        </div>
    </div>
{% endblock %}

{% block _no_shopping_lists_widget %}
    <div class="cart-list-empty">
        <span class="cart-list-empty__icon"><i class="fa-shopping-cart"></i></span>
        <span>{{ 'oro.frontend.shoppinglist.view.not_have_available'|trans }}</span>
    </div>
{% endblock %}

{% block _shopping_list_title_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% set attr = attr|merge({id: "title-inline-editable"}) %}
    {% if app.user %} {# inline_editing.enable does not hide edit btn #}
        <div{{ block('block_attributes') }} {{ UI.renderPageComponentAttributes({
            module: 'oroshoppinglist/js/app/components/shoppinglist-title-inline-editable-view-component',
            options: {
                frontend_type: 'title',
                value: shoppingList.label,
                fieldName: 'label',
                insertEditorMethod: 'after',
                eventChannelId: 'shopping-list-title',
                metadata: {
                    broadcast_parameters: {
                        id: shoppingList.id
                    },
                    inline_editing: {
                        enable: is_granted('oro_shopping_list_frontend_update'),
                        save_api_accessor: {
                            route: 'oro_api_frontend_patch_entity_data',
                            http_method: 'PATCH',
                            default_route_parameters: {
                                className: oro_class_name(shoppingList, true),
                                id: shoppingList.id
                            }
                        },
                        editor: {
                            view_options: {
                                validationRules: {
                                    NotBlank: true,
                                    Length: {
                                        max: 255
                                    }
                                }
                            }
                        }
                    },
                    view_options: {
                        tooltip: 'oro.shoppinglist.label.edit.tooltip'|trans,
                        additionalClass: 'cart-order-title'
                    }
                }
            }
        }) }}>
    {% else %}
        <div>
    {% endif %}
        <h1 class="cart-order-title">
            <span>{{ shoppingList.label }}</span>
        </h1>
    </div>
{% endblock %}

{% block _shopping_list_top_actions_widget %}
    {% set attr = attr|merge({
        class: attr.class|default('') ~ " controls-list",
        'data-name': "empty-items__hide"
    }) %}
    <div{{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_options_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set notes = shoppingList.notes %}
    {% set hasRecords = notes is not empty %}
    {% set attr = attr|merge({ class: attr.class|default('') ~ " collapse-view" }) %}
    <div{{ block('block_attributes') }} data-page-component-collapse="{{ { open: hasRecords }|json_encode() }}">
        <a href="#" class="collapse-view__trigger" data-collapse-trigger>
            <i class="collapse-view__trigger-icon fa-caret-right"></i>
            <span class="collapse-view__trigger-text">
                {{ 'oro.frontend.shoppinglist.view.view_options.label'|trans }}
            </span>
        </a>

        <div class="shopping-list-view-options collapse-view__container" data-collapse-container
            {{ UI.renderPageComponentAttributes({
                module: 'orofrontend/js/app/components/switchable-editable-view-component',
                options: {
                    frontend_type: 'multilineText',
                    value: shoppingList.notes,
                    fieldName: 'notes',
                    insertEditorMethod: 'after',
                    metadata: {
                        inline_editing: {
                            enable: is_granted('oro_shopping_list_frontend_update'),
                            save_api_accessor: {
                                route: 'oro_api_frontend_patch_entity_data',
                                http_method: 'PATCH',
                                default_route_parameters: {
                                    className: oro_class_name(shoppingList, true),
                                    id: shoppingList.id
                                }
                            }
                        }
                    }
                }
            }) }}>
            <label for="addANote"
                   data-checkbox
                   class="custom-checkbox {% if notes is not empty %}checked{% endif %}"
            >
                <input id="addANote"
                       name="addANote"
                       type="checkbox"
                       data-role="start-editing"
                       class="custom-checkbox__input"
                       {% if notes is not empty %}checked="checked"{% endif %}
                >
                <span class="custom-checkbox__icon"></span>
                <span class="custom-checkbox__text">{{ 'oro.frontend.shoppinglist.view.add_note.label'|trans }}</span>
            </label>
            <div data-role="editor">
            <textarea placeholder="{{ 'oro.frontend.shoppinglist.view.add_note.placeholder'|trans }}"
                      rows="3" cols="30" name="shopping_list_notes" disabled="disabled"
                      class="textarea textarea--full">{{ notes }}</textarea>
            </div>
        </div>
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% if shoppingList.lineItems.count() %}
        {% set attr = attr|merge({ class: attr.class|default('') ~ " cart-table"}) %}
        <div{{ block('block_attributes') }} {{ UI.renderPageComponentAttributes({
            module: 'orofrontend/js/app/components/empty-items-component',
            options: {eventName: 'frontend:item:delete'}
        }) }} data-items-selector=".shopping-list-line-items__item-wrapper" data-empty-block-selector=".cart-list-empty">
            <div class="shopping-list-line-items" {{ UI.renderPageComponentAttributes({
                module: 'oroui/js/app/components/view-component',
                layout: 'separate',
                options: {
                    view: 'oroshoppinglist/js/app/views/line-items-view'
                }
            }) }}>
                <div class="shopping-list-line-items__header">
                    <div class="shopping-list-line-items__header-label">{{ 'oro.frontend.shoppinglist.view.item.lable'|trans }}</div>
                    <div class="shopping-list-line-items__header-label">{{ 'oro.frontend.shoppinglist.view.subtotal.lable'|trans }}</div>
                </div>
                {% for lineItem in lineItems %}
                    <div class="shopping-list-line-items__item-wrapper">
                        {% set matrixForm = lineItem.matrixForm|default(null) %}
                        {% set matrixFormType = lineItem.matrixFormType|default(null) %}
                        {% set lineItem = lineItem.lineItems|first %}
                        {% set mainProduct = lineItem.parentProduct|default(lineItem.product) %}
                        {% set totals = totalPrices[mainProduct.id] is defined ? totalPrices[mainProduct.id] : null %}

                        {% do block|merge_context({
                            shoppingList: shoppingList,
                            lineItem: lineItem,
                            mainProduct: mainProduct,
                            parent: block.vars,
                            loop: loop,
                            matrixForm: matrixForm,
                            matrixFormType: matrixFormType,
                            productsAllPrices: productsAllPrices,
                            totals: totals
                        }) %}

                        {{ block('container_widget') }}
                    </div>
                {% endfor %}
            </div>
        </div>
    {% else %}
        <div class="cart-list-empty">
            <span class="cart-list-empty__icon"><i class="fa-shopping-cart"></i></span>
            <span class="fs24">{{ 'oro.frontend.shoppinglist.view.not_products_available'|trans }}</span>
        </div>
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_item_inline_matrix_form_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% if matrixForm is not null %}
        {% do block|merge_context({
            product: mainProduct,
            shoppingList: shoppingList,
            form: matrixForm,
            prices: productsAllPrices,
        }) %}
        <div {{ UI.renderPageComponentAttributes({
            view: 'oroshoppinglist/js/app/views/line-item-form-submit-view',
        }) }}>
            {{ block('container_widget') }}
        </div>
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_item_matrix_popup_button_widget %}
    {% if matrixFormType == 'popup' %}
        {% import 'OroUIBundle::macros.html.twig' as UI %}
        {{ UI.clientLink({
            'aCss': 'btn btn--info btn--size-s shopping-list-line-items__action-button',
            'label' : 'oro.frontend.shoppinglist.btn.update'|trans,
            'widget' : {
                'type' : 'matrix-grid-order',
                'options': {
                    'shoppingListId': shoppingList.id
                }
            }
        }) }}
    {% endif %}
{% endblock %}

{% block _matrix_shopping_list_totals_widget %}
    {% if matrixFormType == 'popup' %}
        {{ parent_block_widget(block) }}
    {% endif %}
{% endblock %}

{% block _matrix_shopping_list_totals_wrapper_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': class_prefix ~ '__wrapper--transparent '
    }) %}
    {{ parent_block_widget(block) }}
{% endblock %}

{% block _shopping_list_line_items_list_row_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {% import 'OroProductBundle::image_macros.html.twig' as Image %}
    {% set class = matrixForm is null ?
        ' shopping-list-line-items__item' :
        'shopping-list-line-items__item--configurable'
    %}
    {% set productImageData = mainProduct.imagesByType('listing').first.image|default(null) %}
    {% set productImage = Image.image(productImageData, 'product_small') %}
    {% set productImageUrl = Image.url(productImageData, 'product_small') %}
    {% set modelAttr = mainProduct.jsonSerialize() %}
    {% set modelAttr = modelAttr|merge({
        'imageUrl': productImageUrl
    }) %}
    {% set attr = attr|merge({class: class}) %}

    {% do block|merge_context({
        productImage: productImage
    }) %}

    <div {{ block('block_attributes') }} {{ UI.renderPageComponentAttributes({
        module: 'oroui/js/app/components/view-component',
        options: {
            view: 'oroshoppinglist/js/app/views/line-item-view',
            modelAttr: modelAttr,
            lineItemId: lineItem.id,
            quantityComponentOptions: {
                dataKey: constant('Oro\\Bundle\\ProductBundle\\Form\\Type\\FrontendLineItemType::NAME'),
                enable: is_granted('oro_shopping_list_frontend_update'),
                elements: {
                    quantity: '[name="product_qty"]',
                    unit: '[name="product_unit"]'
                },
                save_api_accessor: {
                    default_route_parameters: {
                        id: lineItem.id
                    },
                    route: 'oro_api_shopping_list_frontend_put_line_item'
                },
                value: {
                    unit: lineItem.unit.code,
                    quantity: lineItem.quantity
                },
                validation: {
                    showErrorsHandler: 'oroshoppinglist/js/shopping-list-item-errors-handler'
                }
            }
        },
        layout: 'separate'
    }) }}>
        {{ block('container_widget') }}
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_item_widget %}
    <div class="product-item product-item--in-cart">
        {{ block('container_widget') }}
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_item_image_widget %}
    <div class="product-item__image-holder product-item__image-holder--in-cart">
        <a href="{{ path('oro_product_frontend_product_view', {'id': mainProduct.id}) }}">{{ productImage }}</a>
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_item_description_widget %}
    <div class="shopping-list-line-items__description">
        {{ block('container_widget') }}
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_item_name_widget %}
    <h3 class="product-item__title product-item__title--in-cart">
        <a href="{{ path('oro_product_frontend_product_view', {'id': mainProduct.id}) }}">{{ mainProduct.names|localized_value|oro_tag_filter }}</a>
    </h3>
{% endblock %}

{% block _shopping_list_line_items_list_item_sku_widget %}
    <div>
        {{ 'oro.frontend.shoppinglist.view.item.label'|trans }}
        <span class="product-item__sku-value">{{ mainProduct.sku|oro_tag_filter }}</span>
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_item_inventory_status_widget %}
    <div class="shopping-list-line-items__status">{{ mainProduct.InventoryStatus }}</div>
    {% if (oro_is_low_inventory_product(mainProduct)) %}
        <p class="product-low-inventory">{{ "oro.inventory.low_inventory.label"|trans }}</p>
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_item_configurable_products_widget %}
    {% if matrixFormType == 'none' and parent.configurableProducts[lineItem.product.id] is defined %}
        {% for field in parent.configurableProducts[lineItem.product.id] %}
            <div>{{ field.label|trans }}: {{ field.value }}</div>
        {% endfor %}
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_specification_widget %}
    {% if matrixFormType == 'none' %}
        <div class="shopping-list-line-items__specification">
            {{ block('container_widget') }}
        </div>
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_quantity_form_widget %}
    {% set isProductUnitSelectionVisible = parent.productsUnitSelectionVisibilities[lineItem.product.id]|default({}) is not empty ? parent.productsUnitSelectionVisibilities[lineItem.product.id] : null %}
    {% set isLineItemUnitVisible = parent.lineItemsUnitVisibilities[lineItem.id]|default({}) is not empty ? parent.lineItemsUnitVisibilities[lineItem.id] : null %}
    <form action="#" class="product__qty-container cart-table__form">
        <div class="product__qty-input product__qty-input_inline product__qty-input_more-info">
            <div class="product__qty-input__count-option">
                <input type="number" value="{{ lineItem.quantity }}" name="product_qty" data-name="field__quantity"
                       placeholder="{{ 'oro.frontend.shoppinglist.view.qty.label'|trans }}"
                       class="input  input--full text-center" disabled="disabled" required
                />
            </div>
        </div>
        <div class="product__select">
            {% if isProductUnitSelectionVisible %}
                <select class="select select--full" name="product_unit" data-name="field__unit" required>
                    {% if parent.productsUnits[lineItem.product.id] is defined %}
                        {% for unit in parent.productsUnits[lineItem.product.id]|keys %}
                            <option value="{{ unit }}" {% if unit == lineItem.unit.code %}selected="selected"{% endif %}>{{ unit|oro_format_product_unit_label}}</option>
                        {% endfor %}
                        {% if lineItem.unit.code not in parent.productsUnits[lineItem.product.id]|keys %}
                            <option value="{{ lineItem.unit.code }}" selected="selected" disabled="disabled">{{ lineItem.unit.code|oro_format_product_unit_label}}</option>
                        {% endif %}
                    {% endif %}
                </select>
            {% else %}
                <input type="hidden" name="product_unit" value="{{ lineItem.unit.code }}" data-name="field__unit" />
                {% if isLineItemUnitVisible %}
                    {{ lineItem.unit.code|oro_format_product_unit_label}}
                {% endif %}
            {% endif %}
        </div>
    </form>
{% endblock %}

{% block _shopping_list_line_items_list_price_widget %}
    {% if matrixForm is null %}
        {% import 'OroUIBundle::macros.html.twig' as UI %}
        {% set productAllPrices = parent.productsAllPrices[lineItem.product.id]|default({}) is not empty ? parent.productsAllPrices[lineItem.product.id] : null %}
        <div class="line-item-price" {{ UI.renderPageComponentAttributes({
            module: 'oroui/js/app/components/view-component',
            options: {
                view: 'oropricing/js/app/views/base-product-prices-view',
                modelAttr: {
                    prices: productAllPrices,
                }
            }
        }) }}>
            {% do block|merge_context({productAllPrices: productAllPrices}) %}
            {{ block('container_widget') }}
        </div>
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_price_info_widget %}
    {% set productMatchedPrice = parent.productsMatchedPrice[lineItem.product.id][lineItem.unit.code] is not empty ? parent.productsMatchedPrice[lineItem.product.id][lineItem.unit.code] : null %}
    {# TODO: Pass default currency from provider. BB-2218 #}
    {% set defaultCurrency = 'USD' %}
    {% set currency = productMatchedPrice ? productMatchedPrice.currency : defaultCurrency %}
    <table class="price-table {{ productMatchedPrice is null ? 'hidden' }}" data-name="price">
        <tbody>
        <tr>
            <td class="text-right"
                data-name="prices-hint"
                data-placement="bottom"
                data-close="false"
                data-trigger="hover"
                data-container="body"
                data-class="prices-hint-content">
                    <span data-name="price-value">
                        {% if productMatchedPrice is not null %}
                            {{ productMatchedPrice.value|oro_format_currency({'currency': currency}) }}
                        {% else %}
                            {{ 'oro.ui.empty'|trans }}
                        {% endif %}
                    </span>
            </td>
        </tr>
        </tbody>
    </table>
    <div data-name="prices-hint-content" class="hidden">
        <table class="table">
            <thead>
            <tr>
                <th class="text-uppercase">{{ 'oro.pricing.frontend.product.quantity.short_label'|trans }}</th>{# qty#}
                <th>{{ 'oro.pricing.frontend.product.unit_price.long_label'|trans }}</th>{# Unit Price #}
            </tr>
            </thead>
            <tbody>
            {% set shownUnit = '' %}
            {% for price in productAllPrices %}
                {% if shownUnit != price.unit %}
                    {% set shownUnit = price.unit %}
            <tr>
                <td colspan="2" class="text-capitalize">
                    {% if loop.index > 1 %}<br/>{% endif %}
                    <b>{{ shownUnit|oro_format_product_unit_label }}</b>
                </td>
            </tr>
                {% endif %}
            <tr>
                <td>{{ price.quantity }}</td>
                <td>{{ price.formatted_price }}</td>
            </tr>
            {% endfor %}
            </tbody>
        </table>
    </div>
    <div data-name="price-not-found" class="{{ productMatchedPrice is not null ? 'hidden' }}">
        {% if productAllPrices %}
            <span data-name="prices-hint"
                  data-placement="bottom"
                  data-close="false"
                  data-trigger="hover"
                  data-container="body"
                  data-class="prices-hint-content"
                  >{{ 'oro.pricing.frontend.product_prices.price_not_found'|trans }}</span>
        {% else %}
        {{ 'oro.pricing.frontend.product_prices.empty_prices'|trans }}
        {% endif %}
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_actions_widget %}
    <div class="shopping-list-line-items__actions">
        {{ block('container_widget') }}
    </div>
{% endblock %}

{% block _shopping_list_line_items_list_actions_remove_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}

    {% set moduleOptions = {
        removeClass: 'shopping-list-line-items__item-wrapper',
        confirmMessage: 'oro.frontend.shoppinglist.messages.line_item_delete_confirm'|trans,
        successMessage: 'oro.frontend.shoppinglist.messages.line_item_deleted'|trans
    } %}

    {% if matrixForm != 'none' %}
        {% set moduleOptions = moduleOptions|merge({
            route: 'oro_shopping_list_frontend_remove_product',
            requestMethod: 'POST',
            routeParams: {
                'productId': mainProduct.id,
                'shoppingListId': shoppingList.id
            }
        }) %}
    {% else %}
        {% set moduleOptions = moduleOptions|merge({
            route: 'oro_api_shopping_list_frontend_delete_line_item',
            routeParams: {'id': lineItem.id}
        }) %}
    {% endif %}

    <button class="item-remove button button--plain" {{ UI.renderPageComponentAttributes({
            module: 'orofrontend/js/app/components/delete-item-component',
            options: moduleOptions
        }) }} >
        <i class="fa-trash-o fa--x-large fa--no-offset"></i>
    </button>
{% endblock %}

{% block _shopping_list_line_items_list_errors_widget %}
    {% if oro_inventory_product_is_upcoming(mainProduct) %}
        {% set availableDate = oro_inventory_product_availability_date(mainProduct) %}
        <tr class="error-row">
            <td colspan="6">
                <div class="notification--warning">
                    <i class="fa-exclamation-circle"></i>
                    <span class="notification__text">
                    {% if availableDate is not null %}
                        {{ 'oro.inventory.is_upcoming.notification_with_date'|trans ~ availableDate|oro_format_date({'timeZone': oro_timezone()}) }}
                    {% else %}
                        {{ 'oro.inventory.is_upcoming.notification'|trans }}
                    {% endif %}
                    </span>
                </div>
            </td>
        </tr>
    {% endif %}
    {% set errorPath = 'product.' ~ lineItem.productSku %}
    {% if parent.lineItemErrors is iterable and parent.lineItemErrors[errorPath] is defined and parent.lineItemErrors[errorPath] is iterable %}
    {% for error in parent.lineItemErrors[errorPath] %}
    <div class="shopping-list-line-items__error">
        <div id="product-error-{{ lineItem.productSku }}"></div>
    </div>
    <script>
        require(['oroui/js/messenger'], function(messenger) {
            messenger.notificationFlashMessage('error', '{{ error.message }}', {
                style: 'validation',
                container: $('#product-error-{{ lineItem.productSku }}')
            })
        });
    </script>
    {% endfor %}
    {% endif %}
{% endblock %}

{% block _shopping_list_line_items_list_notes_widget %}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    <div class="shopping-list-line-items__note">
        {% set notes = lineItem.notes %}
        <div>
            <div class="editable" {{ UI.renderPageComponentAttributes({
                module: 'orofrontend/js/app/components/switchable-editable-view-component',
                options: {
                    frontend_type: 'multilineText',
                    value: lineItem.notes,
                    fieldName: 'notes',
                    metadata: {
                        inline_editing: {
                            enable: is_granted('oro_shopping_list_frontend_update'),
                            save_api_accessor: {
                                route: 'oro_api_frontend_patch_entity_data',
                                http_method: 'PATCH',
                                default_route_parameters: {
                                    className: oro_class_name(lineItem, true),
                                    id: lineItem.id
                                }
                            }
                        }
                    }
                }
            }) }}>
                <div class="editable__trigger">
                    <label for="{{ 'lineItem'~lineItem.id }}"
                           data-checkbox
                           class="custom-checkbox
                       {% if notes is not empty %} checked {% endif %}"
                    >
                        <input name="{{ 'lineItem'~lineItem.id }}"
                               id="{{ 'lineItem'~lineItem.id }}"
                               type="checkbox"
                               data-role="start-editing"
                                {% if notes is not empty %} checked = "checked" {% endif %}
                               class="custom-checkbox__input"
                        >
                        <span class="custom-checkbox__icon"></span>
                        <span class="custom-checkbox__text">{{ 'oro.frontend.shoppinglist.view.add_item_note.label'|trans }}</span>
                    </label>
                </div>
                <div data-role="editor" class="editable__editor-container">
                    <textarea class="textarea textarea--full" name="copy_paste_order" cols="30" rows="3" disabled="disabled"
                              placeholder="{{ 'oro.frontend.shoppinglist.view.add_item_note.placeholder'|trans }}">{{ lineItem.notes }}</textarea>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block _shopping_list_line_items_empty_widget %}
    {% set attr = attr|merge({ class: attr.class|default('') ~ " cart-list-empty"}) %}
    <div {{ block('block_attributes') }}>
        <span class="cart-list-empty__icon">
            <i class="fa-shopping-cart"></i>
        </span>
        <span>{{ 'oro.frontend.shoppinglist.view.empty'|trans }}</span>
    </div>
{% endblock %}

{% block _shopping_list_checkout_container_widget %}
    {% set attr = attr|merge({class: attr.class|default('') ~ " order-checkout-widget"}) %}
    <div{{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_button_container_widget %}
    {% set attr = attr|merge({class: attr.class|default('') ~ " buttons-equal order-builder-clear-btn"}) %}
    <div{{ block('block_attributes') }}>
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_delete_button_widget %}
    {% placeholder update_navButtons with {entity: shoppingList} %}
{% endblock %}

{% block _shopping_list_totals_widget %}
    <div class="shipping-list-view-total-container order-checkout-widget__container-wrapper">
        {{ block_widget(block) }}
    </div>
{% endblock %}

{% block _shopping_list_combined_button_widget %}
    {% set actionButtonClass = 'btn btn--info btn--size-l full direct-link' %}

    <div class="order-checkout-widget__col" data-name="empty-items__hide">
        {{ block('combined_buttons_widget') }}
    </div>
{% endblock %}
